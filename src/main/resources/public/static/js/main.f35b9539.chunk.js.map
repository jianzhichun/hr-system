{"version":3,"sources":["util/string.js","pages/login/Login.js","pages/signUp/SignUp.js","pages/employeeManagement/new/NewEmployee.js","pages/employeeManagement/manage/ManageEmployee.js","pages/employeeManagement/analysis/AnalysisEmployee.js","pages/employeeManagement/EmployeeManagement.js","pages/attendanceManagement/new/NewAttendance.js","pages/attendanceManagement/manage/ManageAttendance.js","pages/attendanceManagement/AttendanceManagement.js","pages/salaryManagement/new/NewSalary.js","pages/salaryManagement/manage/ManageSalary.js","pages/salaryManagement/analysis/AnalysisSalary.js","pages/salaryManagement/SalaryManagement.js","pages/employmentManagement/new/NewEmployment.js","pages/employmentManagement/manage/ManageEmployment.js","pages/employmentManagement/analysis/AnalysisManagement.js","pages/employmentManagement/EmploymentManagement.js","pages/jobOfferManagement/new/NewJobOffer.js","pages/jobOfferManagement/manage/ManageJobOffer.js","pages/jobOfferManagement/analysis/AnalysisJobOffer.js","pages/jobOfferManagement/JobOfferManagement.js","pages/home/Home.js","pages/profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["POST","GET","Login","props","className","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","password","email","axios","method","url","data","then","code","message","Modal","error","content","loadUser","window","location","hash","catch","console","log","autoComplete","Item","label","rules","type","required","Password","valuePropName","offset","htmlType","to","SignUp","verifyPassword","DebounceSelect","fetchOptions","debounceTimeout","useState","fetching","setFetching","options","setOptions","fetchRef","useRef","debounceFetcher","useMemo","debounce","value","current","fetchId","newOptions","showSearch","filterOption","onSearch","notFoundContent","size","NewEmployee","style","backgroundColor","padding","response","success","e","placeholder","TextArea","showCount","maxLength","Group","departmentName","map","item","id","level","firstOptions","allowClear","EmployeeManagement","fetchDepartmentsByName","fetchPositionsByName","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","onChange","marginBottom","display","width","target","onPressEnter","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","record","format","toString","toLowerCase","includes","Form","useForm","form","setData","pageSize","pagination","setPagination","editingKey","setEditingKey","fetch","param","departmentId","positionId","enrolTime","list","key","birthday","moment","resignTime","pageNum","total","useEffect","isEditing","save","a","validateFields","row","newData","index","findIndex","msg","splice","push","mergedColumns","title","editable","render","_","positionName","fixed","Link","onClick","marginRight","err","toJSON","onConfirm","disabled","setFieldsValue","edit","col","onCell","inputType","editing","component","components","body","cell","inputNode","children","restProps","margin","filters","sorter","extra","bordered","dataSource","columns","rowClassName","scroll","x","AnalysisEmployee","gender","setGender","departmentAndLevel","setDepartmentAndLevel","setCategory","i","GENDER","radius","center","roseType","itemStyle","borderRadius","emphasis","show","COUNT","z","department","position","option","tooltip","trigger","legend","left","top","toolbox","feature","mark","dataView","readOnly","restore","saveAsImage","series","height","minHeight","Sider","theme","path","exact","NewAttendance","ManageAttendance","fetchJobOffersByName","jobName","startDate","endDate","formatType","jobTitle","jobOfferId","defaultValue","page","T","AttendanceManagement","NewSalary","min","step","stringMode","SalaryManagement","amount","start","end","form1","icon","resetFields","AnalysisSalary","setOption","option1","setOption1","text","grid","right","bottom","containLabel","xAxis","DEPARTMENT_NAME","yAxis","SUM","showBackground","backgroundStyle","NewEmployment","warningOnly","EmploymentManagement","open","AnalysisManagement","job","JOB","status","STATUS","NewJoboffer","EmploymentJobOffer","dueDate","AnalysisJobOffer","NAME","JobOfferManagement","ICON_STYLE","fontSize","Home","SmileTwoTone","BuildTwoTone","twoToneColor","DollarTwoTone","CheckCircleTwoTone","Profile","App","user","setUser","document","menu","mode","TeamOutlined","TableOutlined","RedEnvelopeOutlined","CodepenOutlined","UsergroupAddOutlined","overlay","preventDefault","DownOutlined","flexDirection","alignItems","justifyContent","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"0kBAAaA,EAAO,OACPC,EAAM,M,OCKJ,SAASC,EAAMC,GAyB1B,OACI,qBAAKC,UAAW,QAAhB,SACI,sBAAKA,UAAW,OAAhB,UACI,qBAAKA,UAAW,sBAAhB,mBACA,eAAC,IAAD,CACIC,KAAK,QACLC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,cAAe,CAACC,UAAU,GAC1BC,SA7BhB,YAAqC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACvBC,IAAM,CACFC,OAAQf,EACRgB,IAAK,qBACLC,KAAM,CACFJ,MAAOA,EACPD,SAAUA,KAEfM,MAAK,YAAkC,IAAD,IAA9BD,KAAQE,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,QACR,IAATD,EACAE,IAAMC,MAAM,CAAEC,QAASH,KAEvBjB,EAAMqB,WACNC,OAAOC,SAASC,KAAO,YAE5BC,OAAM,SAAAN,GACLO,QAAQC,IAAIR,OAcJS,aAAa,MANjB,UAQI,cAAC,IAAKC,KAAN,CACIC,MAAM,QACN5B,KAAK,QACL6B,MAAO,CACH,CAAEC,KAAM,SACR,CACIC,UAAU,EACVhB,QAAS,6BAPrB,SAWI,cAAC,IAAD,MAGJ,cAAC,IAAKY,KAAN,CACIC,MAAM,WACN5B,KAAK,WACL6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,gCANrB,SAUI,cAAC,IAAMiB,SAAP,MAGJ,cAAC,IAAKL,KAAN,CACI3B,KAAK,WACLiC,cAAc,UACd9B,WAAY,CACR+B,OAAQ,EACRhC,KAAM,IALd,SAQI,cAAC,IAAD,4BAGJ,eAAC,IAAKyB,KAAN,CACIxB,WAAY,CACR+B,OAAQ,EACRhC,KAAM,IAHd,UAMI,cAAC,IAAD,CAAQ4B,KAAK,UAAUK,SAAS,SAAhC,mBAGA,cAAC,IAAD,CAAMC,GAAG,WAAWrC,UAAW,SAA/B,iC,OCpFT,SAASsC,IA8BpB,OACI,sBAAKtC,UAAW,UAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,eAAC,IAAD,CACIC,KAAK,QACLC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,cAAe,CAACC,UAAU,GAC1BC,SAjChB,YAA0D,IAAzCN,EAAwC,EAAxCA,KAAMO,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MACzBD,IADiD,EAAjB+B,eAMpC7B,IAAM,CACFC,OAAQf,EACRgB,IAAK,wBACLC,KAAM,CACFZ,KAAMA,EACNQ,MAAOA,EACPD,SAAUA,KAEfM,MAAK,YAA8B,IAAD,IAA3BD,KAAOE,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACN,IAATD,EACAE,IAAMC,MAAM,CAACC,QAASH,IAEtBK,OAAOC,SAASC,KAAO,aAE5BC,OAAM,SAAAN,GACLO,QAAQC,IAAIR,MAnBZD,IAAMC,MAAM,CAACC,QAAS,4BAgCdQ,aAAc,MANlB,UAOI,qBAAK3B,UAAW,QAAhB,sBACA,cAAC,IAAK4B,KAAN,CACIC,MAAM,OACN5B,KAAK,OACL6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,4BANrB,SASC,cAAC,IAAD,MAED,cAAC,IAAKY,KAAN,CACIC,MAAM,QACN5B,KAAK,QACL6B,MAAO,CACH,CAACC,KAAM,SACP,CACIC,UAAU,EACVhB,QAAS,6BAPrB,SAUC,cAAC,IAAD,MAED,cAAC,IAAKY,KAAN,CAAWC,MAAM,WACN5B,KAAK,WACL6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,gCAL5B,SASI,cAAC,IAAMiB,SAAP,MAEJ,cAAC,IAAKL,KAAN,CAAWC,MAAM,SACN5B,KAAK,iBACL6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,gCAL5B,SASI,cAAC,IAAMiB,SAAP,MAEJ,cAAC,IAAKL,KAAN,CACIxB,WAAY,CACR+B,OAAQ,EACRhC,KAAM,IAHd,SAMI,cAAC,IAAD,CAAQ4B,KAAK,UAAUK,SAAS,SAAhC,6BAQZ,sBAAKpC,UAAW,OAAhB,qCAC4B,cAAC,IAAD,CAAMqC,GAAI,SAAV,mBAD5B,U,uKCjGNG,EAAiB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAmD,IAArCC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,iBACzE,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAMN,SAASgB,IAiCpB,OACI,sBAAKC,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,UACI,qBAAKjE,UAAW,sBAAhB,8BACA,eAAC,IAAD,CAAME,SAAU,CAAEC,KAAM,GACpBC,WAAY,CAAED,KAAM,IACpBI,SAzBZ,SAAqBM,GACjBY,QAAQC,IAAIb,GACZH,IAAM,CACFC,OAAQf,EACRgB,IAAK,oBACLC,KAAMA,IACPC,MAAK,SAAAoD,GACJ,IAAInD,EAAOmD,EAASrD,KAAKE,KACZ,IAATA,EACAC,IAAQmD,QAAQ,YACA,MAATpD,EACPC,IAAQE,MAAM,6BAEdO,QAAQC,IAAIwC,MAEjB1C,OAAM,SAAA4C,GACL3C,QAAQC,IAAI0C,OAOZ,UAGI,cAAC,IAAKxC,KAAN,CAAWC,MAAO,OAAQ5B,KAAM,OAC5B6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,sBAJrB,SAOI,cAAC,IAAD,MAEJ,cAAC,IAAKY,KAAN,CAAWC,MAAO,QAAS5B,KAAM,QAAS6B,MAAO,CAC7C,CAAEC,KAAM,SACR,CACIC,UAAU,EACVhB,QAAS,uBAJjB,SAOI,cAAC,IAAD,MAEJ,cAAC,IAAKY,KAAN,CAAWC,MAAO,cAAe5B,KAAM,YAAa6B,MAAO,CACvD,CACIE,UAAU,EACVhB,QAAS,4BAHjB,SAMI,cAAC,IAAD,CAAYqD,YAAa,aAE7B,cAAC,IAAKzC,KAAN,CAAWC,MAAO,WAAY5B,KAAM,WAAY6B,MAAO,CACnD,CACIE,UAAU,EACVhB,QAAS,0BAHjB,SAMI,cAAC,IAAD,CAAYqD,YAAa,aAE7B,cAAC,IAAKzC,KAAN,CAAWC,MAAO,UAAW5B,KAAM,cAAe6B,MAAO,CACrD,CACIE,UAAU,EACVhB,QAAS,qCAHjB,SAMI,cAAC,IAAD,CAAOqD,YAAa,mBAExB,cAAC,IAAKzC,KAAN,CAAWC,MAAO,UAAW5B,KAAM,UAAW6B,MAAO,CACjD,CACIE,UAAU,EACVhB,QAAS,0BAHjB,SAMI,cAACsD,EAAA,EAAD,CAAUC,WAAS,EAACC,UAAW,QAEnC,cAAC,IAAK5C,KAAN,CAAWC,MAAO,SAAU5B,KAAM,SAAU6B,MAAO,CAC/C,CACIE,UAAU,EACVhB,QAAS,wBAHjB,SAMI,eAAC,IAAMyD,MAAP,WACI,cAAC,IAAD,CAAOpB,MAAO,IAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,kBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,wBAGR,cAAC,IAAKzB,KAAN,CAAWC,MAAO,kBAAmB5B,KAAM,eAAgB6B,MAAO,CAC9D,CACIE,UAAU,EACVhB,QAAS,iCAHjB,SAMI,cAAC,EAAD,CACIqD,YAAY,4BACZ5B,aA5GW,SAACiC,GAC5B,OAAOhE,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsC8D,KAC1C5D,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAO+C,EAAK3E,KAAMoD,MAAOuB,EAAKC,eA2GzF,cAAC,IAAKjD,KAAN,CAAWC,MAAO,gBAAiB5B,KAAM,aAAc6B,MAAO,CAC1D,CACIE,UAAU,EACVhB,QAAS,+BAHjB,SAMI,cAAC,EAAD,CACIqD,YAAY,2BACZ5B,aAlHM,SAACxC,GACvB,OAAOS,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCX,KACxCa,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAM,GAAD,OAAK+C,EAAK3E,KAAV,YAAkB2E,EAAKE,MAAvB,KAAiCzB,MAAOuB,EAAKC,eAiH7G,cAAC,IAAKjD,KAAN,CAAWxB,WAAY,CAAE+B,OAAQ,EAAGhC,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAAlC,yB,iOChKdI,EAAiB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAcsC,EAAmD,EAAnDA,aAAmD,IAArCrC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,iBACvF,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASoC,GAAvC,mBAAOjC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIsC,YAAU,EACVvB,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GANR,IAOI+C,QAASA,MAKN,SAASmC,IAEpB,IAAMC,EAAyB,SAACR,GAC5B,OAAOhE,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsC8D,KAC1C5D,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAO+C,EAAK3E,KAAMoD,MAAOuB,EAAKC,WAClGM,EAAuB,SAAClF,GACvB,OAAOS,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCX,KACxCa,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAM,GAAD,OAAK+C,EAAK3E,KAAV,YAAkB2E,EAAKE,MAAvB,KAAiCzB,MAAOuB,EAAKC,WAGnHO,EAAuB,SAACC,EAAWtD,GAAZ,MAAsB,CAC/CuD,eAAgB,YAA+D,IAA5DC,EAA2D,EAA3DA,gBAAiBC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAA4B,EAAnBC,aACvD,MAAa,SAAT3D,EACQ,qBAAKgC,MAAO,CAAEE,QAAS,GAAvB,SACJ,cAAC,IAAD,CACII,YAAW,iBAAYgB,GACvBhC,MAAOmC,EAAa,GACpBG,SAAU,SAAAvB,GAAOmB,EAAgBnB,EAAI,CAACA,GAAK,IAAKqB,KAChD1B,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,YAG3C,eAAT/D,EACC,qBAAKgC,MAAO,CAAEE,QAAS,GAAvB,SACJ,cAAC,EAAD,CACII,YAAY,4BACZ5B,aAAcyC,EACdS,SAAU,SAAAvB,GAAOmB,EAAgBnB,EAAI,CAACA,GAAK,IAAKqB,KAChD1B,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,aAG3C,aAAT/D,EACC,qBAAKgC,MAAO,CAAEE,QAAS,GAAvB,SACJ,cAAC,EAAD,CACII,YAAY,0BACZ5B,aAAc0C,EACdQ,SAAU,SAAAvB,GAAOmB,EAAgBnB,EAAI,CAACA,GAAK,IAAKqB,KAChD1B,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,aAInD,qBAAK/B,MAAO,CAAEE,QAAS,GAAvB,SACJ,cAAC,IAAD,CACII,YAAW,iBAAYgB,GACvBhC,MAAOmC,EAAa,GACpBG,SAAU,SAAAvB,GAAC,OAAImB,EAAgBnB,EAAE2B,OAAO1C,MAAQ,CAACe,EAAE2B,OAAO1C,OAAS,KACnE2C,aAAc,kBAAMP,KACpB1B,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,cAMnEG,WAAY,SAAAC,GAAQ,OAAI,cAACC,EAAA,EAAD,CAAgBpC,MAAO,CAAEqC,MAAOF,EAAW,eAAYG,MAC/EC,SAAU,SAACjD,EAAOkD,GACd,MAAa,SAATxE,EACOwE,EAAOlB,GAAWmB,OAAO,gBAAkBnD,EAAMmD,OAAO,cAChD,QAARzE,EACAwE,EAAOlB,GACRkB,EAAOlB,GAAWoB,WAAWC,cAAcC,SAAStD,EAAMqD,eAC1D,GAECH,EAAOlB,IAAchC,KAiExC,EAAeuD,IAAKC,UAAbC,EAAP,oBAEA,EAAwBnE,mBAAS,IAAjC,mBAAO9B,EAAP,KAAakG,EAAb,OACkCpE,mBAAS,CACnCW,QAAS,EACT0D,SAAU,KAHlB,mBACKC,EADL,KACiBC,EADjB,OAKkCvE,mBAAS,IAL3C,mBAKKwE,EALL,KAKiBC,EALjB,KAMIC,EAAQ,SAACC,GACL,OAAO5G,IAAM,CACTC,OAAQd,EACRe,IAAI,2BAAD,OAA6B0G,EAAMhE,QAAnC,iBAAmDgE,EAAMN,UAAzD,OAAqEM,EAAMrH,MAAQ,SAAWqH,EAAMrH,MAAS,IAA7G,OAAmHqH,EAAMC,cAAgB,iBAAmBD,EAAMC,cAAiB,IAAnL,OAAyLD,EAAME,YAAc,eAAiBF,EAAME,YAAe,IAAnP,OAAyPF,EAAMG,WAAa,cAAgBH,EAAMG,UAAU,GAAGjB,OAAO,eAAkB,MAC5U1F,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,KACjB,IAATE,EACAC,EAAQE,MAAM,CAAEC,QAASH,KAEzB+F,EAAQlG,EAAK6G,KAAK/C,KAAI,SAAAC,GAClB,OAAO,2BAAKA,GAAZ,IAAkB+C,IAAK/C,EAAKC,GAAI+C,SAAUhD,EAAKgD,UAAYC,IAAOjD,EAAKgD,UAAWE,WAAYlD,EAAKgD,UAAYC,IAAOjD,EAAKkD,YAAaL,UAAW7C,EAAKgD,UAAYC,IAAOjD,EAAK6C,iBAEpLP,EAAc,CACV5D,QAASzC,EAAKkH,QACdf,SAAUnG,EAAKmG,SACfgB,MAAOnH,EAAKmH,aAMhCC,qBAAU,WACNZ,EAAMJ,KACP,IAEH,IAAMiB,EAAY,SAAC3B,GAAD,OAAYA,EAAOoB,MAAQR,GASvCgB,EAAI,uCAAG,WAAOR,GAAP,qBAAAS,EAAA,+EAEatB,EAAKuB,iBAFlB,OAECC,EAFD,OAGCC,EAHD,YAGe1H,GACd2H,EAAQD,EAAQE,WAAU,SAAC7D,GAAD,OAAU+C,IAAQ/C,EAAK+C,OAEnDa,GAAS,GACH5D,EAAO2D,EAAQC,GACrB9H,IAAM,CACFC,OAAQf,EACRgB,IAAI,wBAAD,OAA0B+G,GAC7B9G,KAAMyH,IACPxH,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,KAEzB1H,IAAQmD,QAAQ,CAAEhD,QAAS,YAC3BoH,EAAQI,OAAOH,EAAO,EAAtB,2BAA8B5D,GAAS0D,IACvCvB,EAAQwB,GACRnB,EAAc,IACdC,EAAMJ,SAIdsB,EAAQK,KAAKN,GACbvB,EAAQwB,GACRnB,EAAc,KA1Bb,gDA6BL3F,QAAQC,IAAI,mBAAZ,MA7BK,yDAAH,sDAyKJmH,EAxIU,CAAC,yBAETC,MAAO,OACPhD,MAAO,IACPT,UAAW,QACRD,EAAqB,OAAQ,SALxB,IAMR2D,UAAU,IANF,yBASRD,MAAO,QACPzD,UAAW,QACXS,MAAO,KACJV,EAAqB,QAAS,SAZzB,IAaR2D,UAAU,IAbF,yBAgBRD,MAAO,UACPzD,UAAW,UACXS,MAAO,KACJV,EAAqB,UAAW,SAnB3B,IAoBR2D,UAAU,IApBF,yBAuBRD,MAAO,WACPzD,UAAW,cACXS,MAAO,KACJV,EAAqB,cAAe,SA1B/B,IA2BR2D,UAAU,IA3BF,yBA8BRD,MAAO,WACPzD,UAAW,WACXS,MAAO,KACJV,EAAqB,WAAY,SAjC5B,IAkCR2D,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOqB,UAA+B,MAAnBrB,EAAOqB,UAAoBrB,EAAOqB,SAASpB,OAAO,mBApC3E,yBAwCRsC,MAAO,cACPzD,UAAW,YACXS,MAAO,IACPiD,UAAU,GACP3D,EAAqB,YAAa,SA5C7B,IA6CR4D,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOkB,WAAgC,MAAnBlB,EAAOqB,UAAoBrB,EAAOkB,UAAUjB,OAAO,mBA9C7E,yBAkDRsC,MAAO,cACPzD,UAAW,aACXS,MAAO,IACPiD,UAAU,GACP3D,EAAqB,aAAc,SAtD9B,IAuDR4D,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOuB,YAAiC,MAAnBvB,EAAOqB,UAAoBrB,EAAOuB,WAAWtB,OAAO,mBAxD/E,yBA4DRsC,MAAO,SACPzD,UAAW,SACXS,MAAO,GACPiD,UAAU,GACP3D,EAAqB,SAAU,SAhE1B,IAiER4D,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAM,YAlEZ,yBAsERuC,MAAO,aACPzD,UAAW,eACXS,MAAO,IACPiD,UAAU,GACP3D,EAAqB,eAAgB,eA1EhC,IA2ER4D,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAO7B,oBA5Eb,yBAgFRoE,MAAO,WACPzD,UAAW,aACXS,MAAO,IACPiD,UAAU,GACP3D,EAAqB,aAAc,aApF9B,IAqFR4D,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAO2C,kBAGzB,CACIJ,MAAO,YACPhD,MAAO,IACPqD,MAAO,QACP9D,UAAW,YACX2D,OAAQ,SAACC,EAAG1C,GAER,OADiB2B,EAAU3B,GAEvB,iCACI,cAAC,IAAW6C,KAAZ,CACIC,QAAS,kBAAMlB,EAAK5B,EAAOoB,MAC3B5D,MAAO,CACHuF,YAAa,GAHrB,kBAQA,cAAC,IAAWF,KAAZ,CACIC,QAAS,kBACL3I,IAAM,CACFC,OAAQf,EAAMgB,IAAI,wBAAD,OAA0B2F,EAAOoB,OACnD7G,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,IAEzBrB,EAAMJ,GAAYnG,MAAK,kBAAME,IAAQmD,QAAQ,CAAEhD,QAAS,aAAgBiG,EAAc,UAE3F5F,OAAM,SAAA+H,GAAG,OAAIvI,IAAQE,MAAM,CAAEC,QAASoI,EAAIC,SAASxI,cAE1D+C,MAAO,CACHuF,YAAa,GAbrB,oBAkBA,cAAC,IAAD,CAAYR,MAAM,kBAAkBW,UAAW,kBAAMrC,EAAc,KAAnE,SACI,4CAIR,cAAC,IAAWgC,KAAZ,CAAiBM,SAAyB,KAAfvC,EAAmBkC,QAAS,kBAzK1D,SAAC9C,GACVO,EAAK6C,eAAL,eACOpD,IAEPa,EAAcb,EAAOoB,KAqKoDiC,CAAKrD,IAAlE,qBAOc5B,KAAI,SAACkF,GAC/B,OAAKA,EAAId,SAIF,2BACAc,GADP,IAEIC,OAAQ,SAACvD,GAAD,MAAa,CACjBA,SACAwD,UAAW,OACX1E,UAAWwE,EAAIxE,UACfyD,MAAOe,EAAIf,MACXkB,QAAS9B,EAAU3B,OAVhBsD,KAef,OACI,qBAAK9F,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,SACI,qBAAKjE,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAM8G,KAAMA,EAAMmD,WAAW,EAA7B,SACI,cAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KArSP,SAAC,GASf,IACCC,EATJL,EAQE,EARFA,QACA3E,EAOE,EAPFA,UACAyD,EAME,EANFA,MAEAvC,GAIE,EALFwD,UAKE,EAJFxD,QAEA+D,GAEE,EAHF9B,MAGE,EAFF8B,UACGC,EACD,iBAyBF,OAtBIF,EADc,iBAAdhF,EACY,cAAC,EAAD,CACRhB,YAAY,4BACZ5B,aAAcyC,EACdH,aAAc,CAAC,CAAElD,MAAO0E,EAAO7B,eAAgBrB,MAAOkD,EAAOgB,iBAE5C,eAAdlC,EACK,cAAC,EAAD,CACRhB,YAAY,0BACZ5B,aAAc0C,EACdJ,aAAc,CAAC,CAAElD,MAAO0E,EAAO2C,aAAc7F,MAAOkD,EAAOiB,eAE1C,aAAdnC,GAA0C,eAAdA,GAA4C,cAAdA,EACrD,cAAC,IAAD,IACS,WAAdA,EACK,eAAC,IAAMZ,MAAP,WACR,cAAC,IAAD,CAAOpB,MAAO,IAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,kBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,sBAGQ,cAAC,IAAD,IAGZ,8CAAQkH,GAAR,aACKP,EACG,cAAC,IAAKpI,KAAN,CACI3B,KAAMoF,EACNtB,MAAO,CACHyG,OAAQ,GAEZ1I,MAAO,CACH,CACIE,UAAU,EACVhB,QAAQ,gBAAD,OAAkB8H,EAAlB,OARnB,SAYKuB,IAGLC,QAoPI3E,SAAU,SAACsB,EAAYwD,EAASC,EAAQC,GACpCtD,EAAM,2BAAKJ,GAAewD,IAAW3J,MAAK,kBAAMsG,EAAc,QAElEwD,UAAQ,EACRC,WAAYhK,EACZiK,QAASjC,EACTkC,aAAa,eACb9D,WAAYA,EACZ+D,OAAQ,CAAEC,EAAG,c,aC9ZtB,SAASC,KAEpB,MAA4BvI,qBAA5B,mBAAOwI,EAAP,KAAeC,EAAf,KACA,EAAoDzI,qBAApD,mBAAO0I,EAAP,KAA2BC,EAA3B,KACA,EAAgC3I,qBAAhC,mBAAiB4I,GAAjB,WAiDA,OA/CAtD,qBAAU,WACNvH,IAAM,CACFC,OAAQd,EACRe,IAAK,gCACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACf0K,EAAY1K,EAAK8D,KAAI,SAAA6G,GAAC,OAAIA,EAAEC,WAC5BL,EAAU,CACNnL,KAAM,kBACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBC,SAAU,OACVC,UAAW,CACPC,aAAc,GAElBC,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAMuL,EAAEC,gBAGvD/K,IAAM,CACFC,OAAQd,EACRe,IAAK,4CACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACfyK,EAAsB,CAClBrL,KAAM,mCACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBO,EAAG,IACHN,SAAU,SACVC,UAAW,CACPC,aAAc,GAElBC,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAK,GAAD,OAAKuL,EAAEW,WAAWlM,KAAlB,aAA2BuL,EAAEY,SAASnM,KAAtC,gBAGpD,IAEKkL,GAAU,cAAC,KAAD,CACdkB,OAAQ,CACJC,QAAS,CACLC,QAAS,QAEbC,OAAQ,CACJC,KAAM,SACNC,IAAK,UAETC,QAAS,CACLX,MAAM,EACNY,QAAS,CACLC,KAAM,CAAEb,MAAM,GACdc,SAAU,CAAEd,MAAM,EAAMe,UAAU,GAClCC,QAAS,CAAEhB,MAAM,GACjBiB,YAAa,CAAEjB,MAAM,KAG7BkB,OAAQ,CAAC/B,EAAQE,IAErBtH,MAAO,CAAEoJ,OAAQ,QACd,6BCpEI,SAASlI,GAAmBlF,GAMvC,OAJAkI,qBAAU,WACNlI,EAAMqB,aACP,IAGC,eAAC,IAAD,CAAQ2C,MAAO,CAAEqJ,UAAW,KAA5B,UACI,cAACC,EAAA,EAAD,CAAOvH,MAAO,IACVwH,MAAO,QACPtN,UAAW,yBAFf,SAGI,eAAC,IAAD,WACI,cAAC,IAAK4B,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,oBAAV,uBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,qBAAV,sBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,yBAAV,6BAMZ,cAAC,IAAD,UACI,cAAC,IAAD,CAASrC,UAAW,yBAA0B+D,MAAO,CAAEE,QAAS,QAAhE,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,KAAM,iBAAkBC,OAAO,EAAtC,SACI,qBAAKzJ,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,yDAIJ,cAAC,IAAD,CAAOsJ,KAAM,oBAAb,SACI,cAACzJ,EAAD,MAEJ,cAAC,IAAD,CAAOyJ,KAAM,qBAAb,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,yBAAb,SACI,cAACrC,GAAD,kB,uJChD1B1I,GAAiB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAmD,IAArCC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,kBACzE,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAMN,SAAS2K,KA4BpB,OACI,sBAAK1J,MAAO,CAACC,gBAAiB,OAAQC,QAAS,IAA/C,UACI,qBAAKjE,UAAW,sBAAhB,4BACA,eAAC,IAAD,CAAME,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBI,SAxBd,SAAuBM,GACnBY,QAAQC,IAAIb,GACZH,IAAM,CACFC,OAAQf,EACRgB,IAAK,sBACLC,KAAMA,IACPC,MAAK,SAAAoD,GAES,IADFA,EAASrD,KAAKE,KAErBC,IAAQmD,QAAQ,aAEhBnD,IAAQE,MAAMgD,EAASrD,KAAKG,SAC5BS,QAAQC,IAAIwC,OAEjB1C,OAAM,SAAA4C,GACL3C,QAAQC,IAAI0C,OAOZ,UAGI,cAAC,IAAKxC,KAAN,CAAWC,MAAO,iBAAkB5B,KAAM,MAC/B6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,gCAJ5B,SAOI,cAAC,GAAD,CACIqD,YAAY,4BACZ5B,aAzCU,SAAChC,GAC3B,OAAOC,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsCH,KAC1CK,MAAK,oBAAED,KAAF,EAASE,KAAT,EAAeC,QAAf,SAAwBH,KAAgB8D,KAAI,SAAAC,GAAI,MAAK,CAAC/C,MAAO+C,EAAKnE,MAAO4C,MAAOuB,EAAKC,eAyCrF,cAAC,IAAKjD,KAAN,CAAWC,MAAO,aAAc5B,KAAM,QAAS6B,MAAO,CAClD,CACIE,UAAU,EACVhB,QAAS,4BAHjB,SAMI,cAAC,IAAD,CAAYqD,YAAa,aAE7B,cAAC,IAAKzC,KAAN,CAAWC,MAAO,WAAY5B,KAAM,MAAO6B,MAAO,CAC9C,CACIE,UAAU,EACVhB,QAAS,0BAHjB,SAMI,cAAC,IAAD,CAAYqD,YAAa,aAE7B,cAAC,IAAKzC,KAAN,CAAWC,MAAO,OAAQ5B,KAAM,OAAQ6B,MAAO,CAC3C,CACIE,UAAU,EACVhB,QAAS,sBAHjB,SAMI,eAAC,IAAMyD,MAAP,WACI,cAAC,IAAD,CAAOpB,MAAO,IAAd,mBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,sBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,sBACA,cAAC,IAAD,CAAOA,MAAO,IAAd,+BACA,cAAC,IAAD,CAAOA,MAAO,IAAd,4BAGR,cAAC,IAAKzB,KAAN,CAAWxB,WAAY,CAAC+B,OAAQ,EAAGhC,KAAM,IAAzC,SACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAAlC,yB,8IClHdI,GAAiB,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,aAAcsC,EAAkD,EAAlDA,aAAkD,IAApCrC,uBAAoC,MAAlB,GAAkB,EAAX3C,EAAW,kBACrF,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASoC,GAAvC,mBAAOjC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAY,MAC/C9D,GALR,IAMI+C,QAASA,MAKN,SAAS4K,KAEpB,IAAMC,EAAuB,SAACC,GAC1B,OAAOlN,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCgN,KACxC9M,MAAK,oBAAED,KAAF,EAASE,KAAT,EAAeC,QAAf,SAAwBH,KAAgB8D,KAAI,SAAAC,GAAI,MAAK,CAAC/C,MAAO+C,EAAKkE,MAAOzF,MAAOuB,EAAKC,WA2DjG,EAAe+B,IAAKC,UAAbC,EAAP,oBAEA,EAAwBnE,mBAAS,IAAjC,mBAAO9B,EAAP,KAAakG,EAAb,OACkCpE,mBAAS,CACnCW,QAAS,EACT0D,SAAU,KAHlB,mBACKC,EADL,KACiBC,EADjB,OAKkCvE,mBAAS,IAL3C,mBAKKwE,EALL,KAKiBC,EALjB,KAMIC,EAAQ,SAACJ,GACL,OAAOvG,IAAM,CACTC,OAAQd,EACRe,IAAI,6BAAD,OAA+BqG,EAAW3D,QAA1C,iBAA0D2D,EAAWD,YACzElG,MAAK,YAAoC,IAAD,IAAjCD,KAAOE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASH,EAAW,EAAXA,KACf,IAATE,EACAC,EAAQE,MAAM,CAACC,QAASH,KAExB+F,EAAQlG,EAAK6G,KAAK/C,KAAI,SAAAC,GAClB,OAAO,2BACAA,GADP,IAEI+C,IAAK/C,EAAKC,GACVgJ,UAAWhG,IAAOjD,EAAKiJ,WACvBC,QAASjG,IAAOjD,EAAKkJ,eAG7B5G,EAAc,CACV5D,QAASzC,EAAKkH,QACdf,SAAUnG,EAAKmG,SACfgB,MAAOnH,EAAKmH,aAMhCC,qBAAU,WACNZ,EAAMJ,KACP,IAEH,IAAMiB,EAAY,SAAC3B,GAAD,OAAYA,EAAOoB,MAAQR,GASvCgB,EAAI,uCAAG,WAAOR,GAAP,qBAAAS,EAAA,+EAEatB,EAAKuB,iBAFlB,OAECC,EAFD,OAGCC,EAHD,YAGe1H,GACd2H,EAAQD,EAAQE,WAAU,SAAC7D,GAAD,OAAU+C,IAAQ/C,EAAK+C,OAEnDa,GAAS,GACH5D,EAAO2D,EAAQC,GACrB9H,IAAM,CACFC,OAAQf,EACRgB,IAAI,0BAAD,OAA4B+G,GAC/B9G,KAAMyH,IACPxH,MAAK,YAAmC,IAAD,IAAhCD,KAAOE,EAAyB,EAAzBA,KAAe2H,EAAU,EAAnB1H,QACN,IAATD,EACAC,IAAQE,MAAM,CAACC,QAASuH,KAExB1H,IAAQmD,QAAQ,CAAChD,QAAS,YAC1BoH,EAAQI,OAAOH,EAAO,EAAtB,2BAA6B5D,GAAS0D,IACtCvB,EAAQwB,GACRnB,EAAc,IACdC,EAAMJ,SAIdsB,EAAQK,KAAKN,GACbvB,EAAQwB,GACRnB,EAAc,KA1Bb,gDA6BL3F,QAAQC,IAAI,mBAAZ,MA7BK,yDAAH,sDA+GJmH,EA9EU,CACZ,CACIC,MAAO,iBACPzD,UAAW,QACXS,MAAO,OAEX,CACIgD,MAAO,aACPzD,UAAW,YACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOsH,UAAUrH,OAAO,kBAG1C,CACIsC,MAAO,WACPzD,UAAW,UACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOuH,QAAQtH,OAAO,kBAGxC,CACIsC,MAAO,OACPzD,UAAW,OACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGwH,GAAWxH,EAAOxE,UAGpC,CACI+G,MAAO,YACPzD,UAAW,YACX2D,OAAQ,SAACC,EAAG1C,GAER,OADiB2B,EAAU3B,GAEvB,iCACI,cAAC,IAAW6C,KAAZ,CACIC,QAAS,kBAAMlB,EAAK5B,EAAOoB,MAC3B5D,MAAO,CACHuF,YAAa,GAHrB,kBAQA,cAAC,IAAWF,KAAZ,CACIC,QAAS,kBACL3I,IAAM,CACFC,OR7Od,SQ6O8BC,IAAI,0BAAD,OAA4B2F,EAAOoB,OACvD7G,MAAK,YAAmC,IAAD,IAAhCD,KAAOE,EAAyB,EAAzBA,KAAe2H,EAAU,EAAnB1H,QACN,IAATD,EACAC,IAAQE,MAAM,CAACC,QAASuH,IAExBrB,EAAMJ,GAAYnG,MAAK,kBAAME,IAAQmD,QAAQ,CAAChD,QAAS,aAAeiG,EAAc,UAEzF5F,OAAM,SAAA+H,GAAG,OAAIvI,IAAQE,MAAM,CAACC,QAASoI,EAAIC,SAASxI,cAEzD+C,MAAO,CACHuF,YAAa,GAbrB,oBAkBA,cAAC,IAAD,CAAYR,MAAM,kBAAkBW,UAAW,kBAAMrC,EAAc,KAAnE,SACI,4CAIR,cAAC,IAAWgC,KAAZ,CAAiBM,SAAyB,KAAfvC,EAAmBkC,QAAS,kBA/G1D,SAAC9C,GACVO,EAAK6C,eAAL,eACOpD,IAEPa,EAAcb,EAAOoB,KA2GoDiC,CAAKrD,IAAlE,qBAOc5B,KAAI,SAACkF,GAC/B,OAAKA,EAAId,SAIF,2BACAc,GADP,IAEIC,OAAQ,SAACvD,GAAD,MAAa,CACjBA,SACAwD,UAAW,OACX1E,UAAWwE,EAAIxE,UACfyD,MAAOe,EAAIf,MACXkB,QAAS9B,EAAU3B,OAVhBsD,KAef,OACI,qBAAK9F,MAAO,CAACC,gBAAiB,OAAQC,QAAS,IAA/C,SACI,qBAAKjE,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAM8G,KAAMA,EAAMmD,WAAW,EAA7B,SACI,cAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KA7OP,SAAC,GASO,IARHJ,EAQE,EARFA,QACA3E,EAOE,EAPFA,UACAyD,EAME,EANFA,MAEAvC,GAIE,EALFwD,UAKE,EAJFxD,QAEA+D,GAEE,EAHF9B,MAGE,EAFF8B,UACGC,EACD,kBACpBF,EAAY,cAAC,IAAD,IAqBhB,MApBkB,iBAAdhF,EACAgF,EAAY,cAAC,GAAD,CACRhG,YAAY,2BACZ5B,aAAckL,EACd5I,aAAc,CAAC,CAAClD,MAAO0E,EAAOyH,SAAU3K,MAAOkD,EAAO0H,eAErC,cAAd5I,GAEc,YAAdA,EADPgF,EAAY,cAAC,IAAD,IAGS,SAAdhF,IACPgF,EACI,eAAC,IAAD,CAAQ6D,aAAc,IAAtB,UACI,cAAC,KAAD,CAAQ7K,MAAO,IAAf,mBACA,cAAC,KAAD,CAAQA,MAAO,IAAf,sBACA,cAAC,KAAD,CAAQA,MAAO,IAAf,sBACA,cAAC,KAAD,CAAQA,MAAO,IAAf,+BACA,cAAC,KAAD,CAAQA,MAAO,IAAf,2BAIR,8CAAQkH,GAAR,aACKP,EACG,cAAC,IAAKpI,KAAN,CACI3B,KAAMoF,EACNtB,MAAO,CACHyG,OAAQ,GAEZ1I,MAAO,CACH,CACIE,UAAU,EACVhB,QAAQ,gBAAD,OAAkB8H,EAAlB,OARnB,SAYKuB,IAGLC,QA+LIM,UAAQ,EACRC,WAAYhK,EACZiK,QAASjC,EACTkC,aAAa,eACb9D,WAAU,2BACHA,GADG,IAENtB,SAAU,SAAAwI,GACN9G,EAAM,2BAAIJ,GAAL,IAAiB3D,QAAS6K,KAAOrN,MAAK,kBAAMsG,EAAc,kBAU/F,SAAS2G,GAAWK,GAChB,OAAQA,GACJ,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,WACX,IAAK,IACD,MAAO,WACX,IAAK,IACD,MAAO,oBACX,IAAK,IACD,MAAO,aCvTJ,SAASC,GAAsBtO,GAM1C,OAJAkI,qBAAU,WACNlI,EAAMqB,aACP,IAGC,eAAC,IAAD,CAAQ2C,MAAO,CAACqJ,UAAW,KAA3B,UACI,cAACC,EAAA,EAAD,CAAOvH,MAAO,IACPwH,MAAO,QACPtN,UAAW,yBAFlB,SAGI,eAAC,IAAD,WACI,cAAC,IAAK4B,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,sBAAV,uBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,uBAAV,2BAMZ,cAAC,IAAD,UACI,cAAC,IAAD,CAASrC,UAAW,yBAA0B+D,MAAO,CAACE,QAAS,QAA/D,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,KAAM,mBAAoBC,OAAO,EAAxC,SACI,qBAAKzJ,MAAO,CAACC,gBAAiB,OAAQC,QAAS,IAA/C,yDAIJ,cAAC,IAAD,CAAOsJ,KAAM,sBAAb,SACI,cAACE,GAAD,MAEJ,cAAC,IAAD,CAAOF,KAAM,uBAAb,SACI,cAACG,GAAD,kB,2DCxC1BlL,GAAiB,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,aAAkD,IAApCC,uBAAoC,MAAlB,GAAkB,EAAX3C,EAAW,kBACvE,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAY,MAC/C9D,GALR,IAMI+C,QAASA,MAKN,SAASwL,KA2BpB,OACI,sBAAKvK,MAAO,CAACC,gBAAiB,OAAQC,QAAS,IAA/C,UACI,qBAAKjE,UAAW,sBAAhB,4BACA,eAAC,IAAD,CAAME,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBI,SAxBd,SAAmBM,GACfY,QAAQC,IAAIb,GACZH,IAAM,CACFC,OAAQf,EACRgB,IAAK,kBACLC,KAAK,eAAKA,KACXC,MAAK,SAAAoD,GAES,IADFA,EAASrD,KAAKE,KAErBC,IAAQmD,QAAQ,YAEhBnD,IAAQE,MAAMgD,EAASrD,KAAKG,YAEjCQ,OAAM,SAAA4C,GACL3C,QAAQC,IAAI0C,OAQZ,UAGI,cAAC,IAAKxC,KAAN,CAAWC,MAAO,iBAAkB5B,KAAM,aAC/B6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,gCAJ5B,SAOI,cAAC,GAAD,CACIqD,YAAY,4BACZ5B,aAzCU,SAAChC,GAC3B,OAAOC,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsCH,KAC1CK,MAAK,oBAAED,KAAF,EAASE,KAAT,EAAeC,QAAf,SAAwBH,KAAgB8D,KAAI,SAAAC,GAAI,MAAK,CAAC/C,MAAO+C,EAAKnE,MAAO4C,MAAOuB,EAAKC,eAwCrF,cAAC,IAAKjD,KAAN,CAAWC,MAAO,SAAU5B,KAAM,SAAU6B,MAAO,CAC/C,CACIE,UAAU,EACVhB,QAAS,wBAHjB,SAMI,cAAC,KAAD,CACIuN,IAAI,IACJC,KAAK,WACLC,YAAU,EACV1K,MAAO,CAAC+B,MAAO,SAGvB,cAAC,IAAKlE,KAAN,CAAWxB,WAAY,CAAC+B,OAAQ,EAAGhC,KAAM,IAAzC,SACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAAlC,yB,+EC9FL,SAASsM,KAEpB,IAwCA,EAAe9H,IAAKC,UAAbC,EAAP,oBAEA,EAAwBnE,mBAAS,IAAjC,mBAAO9B,EAAP,KAAakG,EAAb,OACkCpE,mBAAS,CACnCW,QAAS,EACT0D,SAAU,KAHlB,mBACKC,EADL,KACiBC,EADjB,OAKkCvE,mBAAS,IAL3C,mBAKKwE,EALL,KAKiBC,EALjB,KAMIC,EAAQ,SAACC,GACL,OAAO5G,IAAM,CACTC,OAAQd,EACRe,IAAI,yBAAD,OAA2B0G,EAAMhE,QAAjC,iBAAiDgE,EAAMN,UAAvD,OAAmEM,EAAMqH,QAAUrH,EAAMqH,OAAO,GAAGC,OAAS,gBAAkBtH,EAAMqH,OAAO,GAAGC,OAAU,IAAxJ,OAA8JtH,EAAMqH,QAAUrH,EAAMqH,OAAO,GAAGE,KAAO,cAAgBvH,EAAMqH,OAAO,GAAGE,KAAQ,MACjP/N,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,KACjB,IAATE,EACAC,EAAQE,MAAM,CAAEC,QAASH,KAEzB+F,EAAQlG,EAAK6G,KAAK/C,KAAI,SAAAC,GAClB,OAAO,2BAAKA,GAAZ,IAAkB+C,IAAK/C,EAAKC,SAEhCqC,EAAc,CACV5D,QAASzC,EAAKkH,QACdf,SAAUnG,EAAKmG,SACfgB,MAAOnH,EAAKmH,aAMhCC,qBAAU,WACNZ,EAAMJ,KACP,IAEH,IAAMiB,EAAY,SAAC3B,GAAD,OAAYA,EAAOoB,MAAQR,GASvCgB,EAAI,uCAAG,WAAOR,GAAP,qBAAAS,EAAA,+EAEatB,EAAKuB,iBAFlB,OAECC,EAFD,OAGCC,EAHD,YAGe1H,GACd2H,EAAQD,EAAQE,WAAU,SAAC7D,GAAD,OAAU+C,IAAQ/C,EAAK+C,OAEnDa,GAAS,GACH5D,EAAO2D,EAAQC,GACrB9H,IAAM,CACFC,OAAQf,EACRgB,IAAI,sBAAD,OAAwB+G,GAC3B9G,KAAMyH,IACPxH,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,KAEzB1H,IAAQmD,QAAQ,CAAEhD,QAAS,YAC3BoH,EAAQI,OAAOH,EAAO,EAAtB,2BAA8B5D,GAAS0D,IACvCvB,EAAQwB,GACRnB,EAAc,IACdC,EAAMJ,SAIdsB,EAAQK,KAAKN,GACbvB,EAAQwB,GACRnB,EAAc,KA1Bb,gDA6BL3F,QAAQC,IAAI,mBAAZ,MA7BK,yDAAH,sDAgCV,EAAgBkF,IAAKC,UAAdiI,EAAP,oBA0GMjG,EAzGU,CACZ,CACIC,MAAO,WACPzD,UAAW,eACXS,MAAO,OAEX,CACIgD,MAAO,aACPzD,UAAW,iBACXS,MAAO,OAEX,CACIgD,MAAO,SACPzD,UAAW,SACXS,MAAO,MACPiD,UAAU,EACVzD,eAAgB,YAA+D,IAA5DC,EAA2D,EAA3DA,gBAAiBC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvD,OAAQ,qBAAK3B,MAAO,CAAEE,QAAS,EAAGuG,OAAQ,GAAI1E,MAAO,SAA7C,SACJ,eAAC,IAAD,CAAM5F,SAAU,CAAEC,KAAM,IAAM2G,KAAMgI,EAChC1O,WAAY,CAAED,KAAM,KADxB,UAGI,cAAC,IAAKyB,KAAN,CAAWC,MAAO,SAAU5B,KAAM,QAAlC,SACI,cAAC,KAAD,CAEIsO,IAAI,IACJC,KAAK,WACLC,YAAU,EACVpL,MAAOmC,EAAa,IAAMA,EAAa,GAAGoJ,MAC1CjJ,SAAU,SAAAvB,GAAC,OAAImB,EAAgBnB,EAAI,CAAC,2BAAKoB,EAAa,IAAnB,IAAuBoJ,MAAOxK,KAAO,KACxEL,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,aAG3D,cAAC,IAAKlE,KAAN,CAAWC,MAAO,OAAQ5B,KAAM,MAAhC,SACI,cAAC,KAAD,CACIsO,IAAI,IACJC,KAAK,WACLC,YAAU,EACVpL,MAAOmC,EAAa,IAAMA,EAAa,GAAGoJ,MAC1CjJ,SAAU,SAAAvB,GAAC,OAAImB,EAAgBnB,EAAI,CAAC,2BAAKoB,EAAa,IAAnB,IAAuBqJ,IAAKzK,KAAO,KACtEL,MAAO,CAAE6B,aAAc,EAAGC,QAAS,QAASC,MAAO,aAG3D,eAAC,IAAKlE,KAAN,CAAWxB,WAAY,CAAE+B,OAAQ,EAAGhC,KAAM,IAA1C,UACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAASiH,QAAS,kBAAM5D,KACtDsJ,KAAM,cAAC5I,EAAA,EAAD,IACNtC,KAAK,QAFT,oBADJ,QAMI,cAAC,IAAD,CAAQwF,QAAS,WAAQ3D,IAAgBH,EAAgB,IAAKuJ,EAAME,eAAiBnL,KAAK,QAAQE,MAAO,CAAE+B,MAAO,IAAlH,4BAOhBG,WAAY,SAAAC,GAAQ,OAAI,cAACC,EAAA,EAAD,CAAgBpC,MAAO,CAAEqC,MAAOF,EAAW,eAAYG,MAC/EC,SAAU,WAAiBC,GAAY,IAA1BqI,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,IAChB,OAAOtI,EAAOoI,QAAUC,GAASrI,EAAOoI,OAASE,IAGzD,CACI/F,MAAO,YACPzD,UAAW,YACX2D,OAAQ,SAACC,EAAG1C,GAER,OADiB2B,EAAU3B,GAEvB,iCACI,cAAC,IAAW6C,KAAZ,CACIC,QAAS,kBAAMlB,EAAK5B,EAAOoB,MAC3B5D,MAAO,CACHuF,YAAa,GAHrB,kBAQA,cAAC,IAAWF,KAAZ,CACIC,QAAS,kBACL3I,IAAM,CACFC,OAAQf,EAAMgB,IAAI,sBAAD,OAAwB2F,EAAOoB,OACjD7G,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,IAEzBrB,EAAMJ,GAAYnG,MAAK,kBAAME,IAAQmD,QAAQ,CAAEhD,QAAS,aAAgBiG,EAAc,UAE3F5F,OAAM,SAAA+H,GAAG,OAAIvI,IAAQE,MAAM,CAAEC,QAASoI,EAAIC,SAASxI,cAE1D+C,MAAO,CACHuF,YAAa,GAbrB,oBAkBA,cAAC,IAAD,CAAYR,MAAM,kBAAkBW,UAAW,kBAAMrC,EAAc,KAAnE,SACI,4CAIR,cAAC,IAAWgC,KAAZ,CAAiBM,SAAyB,KAAfvC,EAAmBkC,QAAS,kBA1I1D,SAAC9C,GACVO,EAAK6C,eAAL,eACOpD,IAEPa,EAAcb,EAAOoB,KAsIoDiC,CAAKrD,IAAlE,qBAOc5B,KAAI,SAACkF,GAC/B,OAAKA,EAAId,SAIF,2BACAc,GADP,IAEIC,OAAQ,SAACvD,GAAD,MAAa,CACjBA,SACAwD,UAA6B,WAAlBF,EAAIxE,UAAyB,SAAW,OACnDA,UAAWwE,EAAIxE,UACfyD,MAAOe,EAAIf,MACXkB,QAAS9B,EAAU3B,OAVhBsD,KAef,OACI,qBAAK9F,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,SACI,qBAAKjE,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAM8G,KAAMA,EAAMmD,WAAW,EAA7B,SACI,cAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KAnPP,SAAC,GASf,IARHJ,EAQE,EARFA,QACA3E,EAOE,EAPFA,UACAyD,EAME,EANFA,MACAiB,EAKE,EALFA,UAGAO,GAEE,EAJF/D,OAIE,EAHFiC,MAGE,EAFF8B,UACGC,EACD,kBACIF,EAA0B,WAAdN,EAAyB,cAAC,KAAD,CAAawE,IAAI,IACxDC,KAAK,WACLC,YAAU,EACV1K,MAAO,CAAE+B,MAAO,OACf,cAAC,IAAD,IACL,OACI,8CAAQyE,GAAR,aACKP,EACG,cAAC,IAAKpI,KAAN,CACI3B,KAAMoF,EACNtB,MAAO,CACHyG,OAAQ,GAEZ1I,MAAO,CACH,CACIE,UAAU,EACVhB,QAAQ,gBAAD,OAAkB8H,EAAlB,OARnB,SAYKuB,IAGLC,QAqNI3E,SAAU,SAACsB,EAAYwD,EAASC,EAAQC,GACpCtD,EAAM,2BAAKJ,GAAewD,IAAW3J,MAAK,kBAAMsG,EAAc,QAElEwD,UAAQ,EACRC,WAAYhK,EACZiK,QAASjC,EACTkC,aAAa,eACb9D,WAAU,eACHA,WCjQhB,SAASgI,KAEpB,MAA4BtM,qBAA5B,mBAAO0J,EAAP,KAAe6C,EAAf,KACA,EAA8BvM,qBAA9B,mBAAOwM,EAAP,KAAgBC,EAAhB,KAyFA,OAxFAnH,qBAAU,WACNvH,IAAM,CACFC,OAAQd,EACRe,IAAK,uCACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACfqO,EAAU,CACNpG,MAAO,CACHuG,KAAM,sBAEV/C,QAAS,CACLC,QAAS,QAEbI,QAAS,CACLC,QAAS,CACLK,YAAa,KAGrBqC,KAAM,CACF7C,KAAM,KACN8C,MAAO,KACPC,OAAQ,KACRC,cAAc,GAElBC,MAAO,CACH3N,KAAM,WACNlB,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,OAAIA,EAAEmE,oBAE1BC,MAAO,CACH7N,KAAM,SAEVmL,OAAQ,CACJ,CACIrM,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,OAAIA,EAAEqE,OACtB9N,KAAM,MACN+N,gBAAgB,EAChBC,gBAAiB,CACb3J,MAAO,qCAM5B,IAEH6B,qBAAU,WACNvH,IAAM,CACFC,OAAQd,EACRe,IAAK,uCACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACfuO,EAAW,CACPtG,MAAO,CACHuG,KAAM,sBAEV/C,QAAS,CACLC,QAAS,QAEbI,QAAS,CACLC,QAAS,CACLK,YAAa,KAGrBqC,KAAM,CACF7C,KAAM,KACN8C,MAAO,KACPC,OAAQ,KACRC,cAAc,GAElBC,MAAO,CACH3N,KAAM,WACNlB,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,OAAIA,EAAEmE,oBAE1BC,MAAO,CACH7N,KAAM,SAEVmL,OAAQ,CACJ,CACIrM,KAAMA,EAAK8D,KAAI,SAAA6G,GAAC,OAAIA,EAAEqE,OACtB9N,KAAM,MACN+N,gBAAgB,EAChBC,gBAAiB,CACb3J,MAAO,qCAM5B,IAEKiG,GAAU8C,GAAW,gCACzB,cAAC,KAAD,CACI9C,OAAQA,EACRtI,MAAO,CAAEoJ,OAAQ,OAErB,cAAC,KAAD,CACId,OAAQ8C,EACRpL,MAAO,CAAEoJ,OAAQ,WAEd,6BChGA,SAASuB,GAAiB3O,GAMrC,OAJAkI,qBAAU,WACNlI,EAAMqB,aACP,IAGC,eAAC,IAAD,CAAQ2C,MAAO,CAAEqJ,UAAW,KAA5B,UACI,cAACC,EAAA,EAAD,CAAOvH,MAAO,IACVwH,MAAO,QACPtN,UAAW,yBAFf,SAGI,eAAC,IAAD,WACI,cAAC,IAAK4B,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,kBAAV,uBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,mBAAV,sBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,uBAAV,6BAMZ,cAAC,IAAD,UACI,cAAC,IAAD,CAASrC,UAAW,yBAA0B+D,MAAO,CAAEE,QAAS,QAAhE,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,KAAM,eAAgBC,OAAO,EAApC,SACI,qBAAKzJ,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,yDAIJ,cAAC,IAAD,CAAOsJ,KAAM,kBAAb,SACI,cAACe,GAAD,MAEJ,cAAC,IAAD,CAAOf,KAAM,mBAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,uBAAb,SACI,cAAC0B,GAAD,kB,iDCjD1BzM,GAAiB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAmD,IAArCC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,kBACzE,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAKN,SAASkN,KA4BpB,OACI,sBAAKjM,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,UACI,qBAAKjE,UAAW,sBAAhB,gCACA,eAAC,IAAD,CAAME,SAAU,CAAEC,KAAM,GACpBC,WAAY,CAAED,KAAM,IACpBI,SAzBZ,SAAuBM,GACnBY,QAAQC,IAAIb,GACZH,IAAM,CACFC,OAAQf,EACRgB,IAAK,sBACLC,KAAMA,IACPC,MAAK,SAAAoD,GAES,IADFA,EAASrD,KAAKE,KAErBC,IAAQmD,QAAQ,YAEhB1C,QAAQC,IAAIwC,MAEjB1C,OAAM,SAAA4C,GACL3C,QAAQC,IAAI0C,OASZ,UAGI,cAAC,IAAKxC,KAAN,CAAWC,MAAO,MAAO5B,KAAM,aAC3B6B,MAAO,CACH,CACIE,UAAU,EACVhB,QAAS,0BAJrB,SAOI,cAAC,GAAD,CACIqD,YAAY,2BACZ5B,aA1CS,SAACmL,GAC1B,OAAOlN,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCgN,KACxC9M,MAAK,oBAAED,KAAF,EAASE,KAAT,EAAeC,QAAf,SAAwBH,KAAgB8D,KAAI,SAAAC,GAAI,MAAK,CAAC/C,MAAO+C,EAAKkE,MAAOzF,MAAOuB,EAAKC,eAyCrF,cAAC,IAAKjD,KAAN,CAAWC,MAAO,aAAc5B,KAAM,YAAa6B,MAAO,CACtD,CACIE,UAAU,EACVhB,QAAS,2BAEb,CAAEe,KAAM,MAAOkO,aAAa,IALhC,SAOI,cAAC,IAAD,MAEJ,cAAC,IAAKrO,KAAN,CAAWxB,WAAY,CAAE+B,OAAQ,EAAGhC,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAAlC,yB,oIC3FdI,GAAiB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAcsC,EAAmD,EAAnDA,aAAmD,IAArCrC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,kBACvF,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASoC,GAAvC,mBAAOjC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAKN,SAASoN,KAEpB,IAAMvC,EAAuB,SAACC,GAC1B,OAAOlN,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCgN,KACxC9M,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAO+C,EAAKkE,MAAOzF,MAAOuB,EAAKC,WA8CtG,EAAe+B,IAAKC,UAAbC,EAAP,oBAEA,EAAwBnE,mBAAS,IAAjC,mBAAO9B,EAAP,KAAakG,EAAb,OACkCpE,mBAAS,CACnCW,QAAS,EACT0D,SAAU,KAHlB,mBACKC,EADL,KACiBC,EADjB,OAKkCvE,mBAAS,IAL3C,mBAKKwE,EALL,KAKiBC,EALjB,KAMIC,EAAQ,SAACJ,GACL,OAAOvG,IAAM,CACTC,OAAQd,EACRe,IAAI,6BAAD,OAA+BqG,EAAW3D,QAA1C,iBAA0D2D,EAAWD,YACzElG,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,KACjB,IAATE,EACAC,EAAQE,MAAM,CAAEC,QAASH,KAEzB+F,EAAQlG,EAAK6G,KAAK/C,KAAI,SAAAC,GAClB,OAAO,2BAAKA,GAAZ,IAAkB+C,IAAK/C,EAAKC,SAEhCqC,EAAc,CACV5D,QAASzC,EAAKkH,QACdf,SAAUnG,EAAKmG,SACfgB,MAAOnH,EAAKmH,aAMhCC,qBAAU,WACNZ,EAAMJ,KACP,IAEH,IAAMiB,EAAY,SAAC3B,GAAD,OAAYA,EAAOoB,MAAQR,GASvCgB,EAAI,uCAAG,WAAOR,GAAP,qBAAAS,EAAA,+EAEatB,EAAKuB,iBAFlB,OAECC,EAFD,OAGCC,EAHD,YAGe1H,GACd2H,EAAQD,EAAQE,WAAU,SAAC7D,GAAD,OAAU+C,IAAQ/C,EAAK+C,OAEnDa,GAAS,GACH5D,EAAO2D,EAAQC,GACrB9H,IAAM,CACFC,OAAQf,EACRgB,IAAI,0BAAD,OAA4B+G,GAC/B9G,KAAMyH,IACPxH,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,KAEzB1H,IAAQmD,QAAQ,CAAEhD,QAAS,YAC3BoH,EAAQI,OAAOH,EAAO,EAAtB,2BAA8B5D,GAAS0D,IACvCvB,EAAQwB,GACRnB,EAAc,IACdC,EAAMJ,SAIdsB,EAAQK,KAAKN,GACbvB,EAAQwB,GACRnB,EAAc,KA1Bb,gDA6BL3F,QAAQC,IAAI,mBAAZ,MA7BK,yDAAH,sDA4GJmH,EA3EU,CACZ,CACIC,MAAO,OACPzD,UAAW,OACXS,MAAO,OAEX,CACIgD,MAAO,MACPzD,UAAW,aACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,8BAAMA,EAAM,aAG3B,CACIuC,MAAO,aACPzD,UAAW,YACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mBAAG8C,QAAS,kBAAMhI,OAAO8O,KAAK5J,EAAM,YAApC,SAAqDA,EAAM,cAG1E,CACIuC,MAAO,SACPzD,UAAW,SACXS,MAAO,MACPiD,UAAU,GAEd,CACID,MAAO,YACPzD,UAAW,YACX2D,OAAQ,SAACC,EAAG1C,GAER,OADiB2B,EAAU3B,GAEvB,iCACI,cAAC,IAAW6C,KAAZ,CACIC,QAAS,kBAAMlB,EAAK5B,EAAOoB,MAC3B5D,MAAO,CACHuF,YAAa,GAHrB,kBAQA,cAAC,IAAWF,KAAZ,CACIC,QAAS,kBACL3I,IAAM,CACFC,OAAQf,EAAMgB,IAAI,0BAAD,OAA4B2F,EAAOoB,OACrD7G,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,IAEzBrB,EAAMJ,GAAYnG,MAAK,kBAAME,IAAQmD,QAAQ,CAAEhD,QAAS,aAAgBiG,EAAc,UAE3F5F,OAAM,SAAA+H,GAAG,OAAIvI,IAAQE,MAAM,CAAEC,QAASoI,EAAIC,SAASxI,cAE1D+C,MAAO,CACHuF,YAAa,GAbrB,oBAkBA,cAAC,IAAD,CAAYR,MAAM,kBAAkBW,UAAW,kBAAMrC,EAAc,KAAnE,SACI,4CAIR,cAAC,IAAWgC,KAAZ,CAAiBM,SAAyB,KAAfvC,EAAmBkC,QAAS,kBA5G1D,SAAC9C,GACVO,EAAK6C,eAAL,eACOpD,IAEPa,EAAcb,EAAOoB,KAwGoDiC,CAAKrD,IAAlE,qBAOc5B,KAAI,SAACkF,GAC/B,OAAKA,EAAId,SAIF,2BACAc,GADP,IAEIC,OAAQ,SAACvD,GAAD,MAAa,CACjBA,SACAwD,UAAW,OACX1E,UAAWwE,EAAIxE,UACfyD,MAAOe,EAAIf,MACXkB,QAAS9B,EAAU3B,OAVhBsD,KAef,OACI,qBAAK9F,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,SACI,qBAAKjE,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAM8G,KAAMA,EAAMmD,WAAW,EAA7B,SACI,cAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KAxNP,SAAC,GASf,IARHJ,EAQE,EARFA,QACA3E,EAOE,EAPFA,UACAyD,EAME,EANFA,MAEAvC,GAIE,EALFwD,UAKE,EAJFxD,QAEA+D,GAEE,EAHF9B,MAGE,EAFF8B,UACGC,EACD,kBACEF,EAAa,cAAC,IAAD,IAQjB,MAPkB,eAAdhF,IACAgF,EAAY,cAAC,GAAD,CACRhG,YAAY,2BACZ5B,aAAckL,EACd5I,aAAc,CAAC,CAAClD,MAAO0E,EAAOyH,SAAU3K,MAAOkD,EAAO0H,gBAI1D,8CAAQ1D,GAAR,aACKP,EACG,cAAC,IAAKpI,KAAN,CACI3B,KAAMoF,EACNtB,MAAO,CACHyG,OAAQ,GAEZ1I,MAAO,CACH,CACIE,UAAU,EACVhB,QAAQ,gBAAD,OAAkB8H,EAAlB,OARnB,SAYKuB,IAGLC,QAuLIM,UAAQ,EACRC,WAAYhK,EACZiK,QAASjC,EACTkC,aAAa,eACb9D,WAAU,2BACHA,GADG,IAENtB,SAAU,SAAAwI,GACN9G,EAAM,2BAAKJ,GAAN,IAAkB3D,QAAS6K,KAAQrN,MAAK,kBAAMsG,EAAc,kBC/QlF,SAASgJ,KAEpB,MAA8BzN,qBAA9B,mBAAOwM,EAAP,KAAgBC,EAAhB,KAiEA,OA/DAnH,qBAAU,WACNvH,IAAM,CACFC,OAAQd,EACRe,IAAK,wCACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACfuO,EAAW,CACP9C,QAAS,CACLC,QAAS,QAEbC,OAAQ,CACNC,KAAM,SACNC,IAAK,UAEPC,QAAS,CACPX,MAAM,EACNY,QAAS,CACPC,KAAM,CAAEb,MAAM,GACdc,SAAU,CAAEd,MAAM,EAAMe,UAAU,GAClCC,QAAS,CAAEhB,MAAM,GACjBiB,YAAa,CAAEjB,MAAM,KAGzBkB,OAAQ,CACJ,CACIjN,KAAM,mCACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBC,SAAU,OACVC,UAAW,CACTC,aAAc,GAEhBC,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAKwP,IAAI1L,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAMuL,EAAE8E,SAEvD,CACIrQ,KAAM,+BACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBC,SAAU,SACVC,UAAW,CACPC,aAAc,GAElBjK,MAAO,CACHmK,MAAM,GAEVD,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAK0P,OAAO5L,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAMuL,EAAEgF,oBAKvE,IAEKrB,GAAW,cAAC,KAAD,CACf9C,OAAQ8C,EACRpL,MAAO,CAAEoJ,OAAQ,QACd,6BCjEI,SAAS+C,GAAqBnQ,GAMzC,OAJAkI,qBAAU,WACNlI,EAAMqB,aACP,IAGC,eAAC,IAAD,CAAQ2C,MAAO,CAAEqJ,UAAW,KAA5B,UACI,cAACC,EAAA,EAAD,CAAOvH,MAAO,IACVwH,MAAO,QACPtN,UAAW,yBAFf,SAGI,eAAC,IAAD,WACI,cAAC,IAAK4B,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,sBAAV,uBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,uBAAV,sBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,2BAAV,6BAMZ,cAAC,IAAD,UACI,cAAC,IAAD,CAASrC,UAAW,yBAA0B+D,MAAO,CAAEE,QAAS,QAAhE,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,KAAM,mBAAoBC,OAAO,EAAxC,SACI,qBAAKzJ,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,yDAIJ,cAAC,IAAD,CAAOsJ,KAAM,sBAAb,SACI,cAACyC,GAAD,MAEJ,cAAC,IAAD,CAAOzC,KAAM,uBAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,2BAAb,SACI,cAAC6C,GAAD,kB,iDCjD1B5N,GAAiB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAmD,IAArCC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,kBACzE,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAKN,SAAS2N,KAgCpB,OACI,sBAAK1M,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,UACI,qBAAKjE,UAAW,sBAAhB,8BACA,eAAC,IAAD,CAAME,SAAU,CAAEC,KAAM,GACpBC,WAAY,CAAED,KAAM,IACpBI,SAzBZ,SAAqBM,GACjBY,QAAQC,IAAIb,GACZH,IAAM,CACFC,OAAQf,EACRgB,IAAK,oBACLC,KAAK,2BAAMA,GAAP,IAAa0P,OAAQ,cAC1BzP,MAAK,SAAAoD,GAES,IADFA,EAASrD,KAAKE,KAErBC,IAAQmD,QAAQ,YAEhB1C,QAAQC,IAAIwC,MAEjB1C,OAAM,SAAA4C,GACL3C,QAAQC,IAAI0C,OASZ,UAGI,cAAC,IAAKxC,KAAN,CAAWC,MAAO,QAAS5B,KAAM,QAAS6B,MAAO,CAC7C,CACIE,UAAU,EACVhB,QAAS,uBAHjB,SAMI,cAAC,IAAD,MAEJ,cAAC,IAAKY,KAAN,CAAWC,MAAO,SAAU5B,KAAM,SAAU6B,MAAO,CAC/C,CACIE,UAAU,EACVhB,QAAS,wBAHjB,SAMI,cAAC,KAAD,MAEJ,cAAC,IAAKY,KAAN,CAAWC,MAAO,WAAY5B,KAAM,UAAW6B,MAAO,CAClD,CACIE,UAAU,EACVhB,QAAS,0BAHjB,SAMI,cAAC,IAAD,CAAYqD,YAAa,aAE7B,cAAC,IAAKzC,KAAN,CAAWC,MAAO,kBAAmB5B,KAAM,eAAgB6B,MAAO,CAC9D,CACIE,UAAU,EACVhB,QAAS,iCAHjB,SAMI,cAAC,GAAD,CACIqD,YAAY,4BACZ5B,aArEW,SAACiC,GAC5B,OAAOhE,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsC8D,KAC1C5D,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAO+C,EAAK3E,KAAMoD,MAAOuB,EAAKC,eAoEzF,cAAC,IAAKjD,KAAN,CAAWC,MAAO,gBAAiB5B,KAAM,aAAc6B,MAAO,CAC1D,CACIE,UAAU,EACVhB,QAAS,+BAHjB,SAMI,cAAC,GAAD,CACIqD,YAAY,2BACZ5B,aA3EM,SAACxC,GACvB,OAAOS,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCX,KACxCa,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAM,GAAD,OAAK+C,EAAK3E,KAAV,YAAkB2E,EAAKE,MAAvB,KAAiCzB,MAAOuB,EAAKC,eA0E7G,cAAC,IAAKjD,KAAN,CAAWxB,WAAY,CAAE+B,OAAQ,EAAGhC,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQ4B,KAAM,UAAWK,SAAS,SAAlC,yB,oICvHdI,GAAiB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAcsC,EAAmD,EAAnDA,aAAmD,IAArCrC,uBAAqC,MAAnB,GAAmB,EAAZ3C,EAAY,kBACvF,EAAgC4C,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASoC,GAAvC,mBAAOjC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,GAClBC,EAAkBC,mBAAQ,WAiB5B,OAAOC,KAhBa,SAACC,GACjBL,EAASM,SAAW,EACpB,IAAMC,EAAUP,EAASM,QACzBP,EAAW,IACXF,GAAY,GACZJ,EAAaY,GAAOvC,MAAK,SAAC0C,GAClBD,IAAYP,EAASM,UAKzBP,EAAWS,GACXX,GAAY,SAISH,KAC9B,CAACD,EAAcC,IAClB,OACI,cAAC,IAAD,yBACIe,YAAU,EACVC,cAAc,EACdC,SAAUT,EACVU,gBAAiBhB,EAAW,cAAC,IAAD,CAAMiB,KAAK,UAAa,MAChD9D,GALR,IAMI+C,QAASA,MAKN,SAAS4N,KAEpB,IAAMxL,EAAyB,SAACR,GAC5B,OAAOhE,IAAM,CACTC,OAAQd,EACRe,IAAI,oCAAD,OAAsC8D,KAC1C5D,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAO+C,EAAK3E,KAAMoD,MAAOuB,EAAKC,WAClGM,EAAuB,SAAClF,GACvB,OAAOS,IAAM,CACTC,OAAQd,EACRe,IAAI,kCAAD,OAAoCX,KACxCa,MAAK,oBAAGD,KAAH,EAAWE,KAAX,EAAiBC,QAAjB,SAA0BH,KAAkB8D,KAAI,SAAAC,GAAI,MAAK,CAAE/C,MAAM,GAAD,OAAK+C,EAAK3E,KAAV,YAAkB2E,EAAKE,MAAvB,KAAiCzB,MAAOuB,EAAKC,WA0DzH,EAAe+B,IAAKC,UAAbC,EAAP,oBAEA,EAAwBnE,mBAAS,IAAjC,mBAAO9B,EAAP,KAAakG,EAAb,OACkCpE,mBAAS,CACnCW,QAAS,EACT0D,SAAU,KAHlB,mBACKC,EADL,KACiBC,EADjB,OAKkCvE,mBAAS,IAL3C,mBAKKwE,EALL,KAKiBC,EALjB,KAMIC,EAAQ,SAACJ,GACL,OAAOvG,IAAM,CACTC,OAAQd,EACRe,IAAI,2BAAD,OAA6BqG,EAAW3D,QAAxC,iBAAwD2D,EAAWD,YACvElG,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,KACjB,IAATE,EACAC,EAAQE,MAAM,CAAEC,QAASH,KAEzB+F,EAAQlG,EAAK6G,KAAK/C,KAAI,SAAAC,GAClB,OAAO,2BAAKA,GAAZ,IAAkB+C,IAAK/C,EAAKC,GAAI8L,QAAS9I,IAAOjD,EAAK+L,eAEzDzJ,EAAc,CACV5D,QAASzC,EAAKkH,QACdf,SAAUnG,EAAKmG,SACfgB,MAAOnH,EAAKmH,aAMhCC,qBAAU,WACNZ,EAAMJ,KACP,IAEH,IAAMiB,EAAY,SAAC3B,GAAD,OAAYA,EAAOoB,MAAQR,GASvCgB,EAAI,uCAAG,WAAOR,GAAP,qBAAAS,EAAA,+EAEatB,EAAKuB,iBAFlB,OAECC,EAFD,OAGCC,EAHD,YAGe1H,GACd2H,EAAQD,EAAQE,WAAU,SAAC7D,GAAD,OAAU+C,IAAQ/C,EAAK+C,OAEnDa,GAAS,GACH5D,EAAO2D,EAAQC,GACrB9H,IAAM,CACFC,OAAQf,EACRgB,IAAI,wBAAD,OAA0B+G,GAC7B9G,KAAMyH,IACPxH,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,KAEzB1H,IAAQmD,QAAQ,CAAEhD,QAAS,YAC3BoH,EAAQI,OAAOH,EAAO,EAAtB,2BAA8B5D,GAAS0D,IACvCvB,EAAQwB,GACRnB,EAAc,IACdC,EAAMJ,SAIdsB,EAAQK,KAAKN,GACbvB,EAAQwB,GACRnB,EAAc,KA1Bb,gDA6BL3F,QAAQC,IAAI,mBAAZ,MA7BK,yDAAH,sDA4HJmH,EA3FU,CACZ,CACIC,MAAO,QACPzD,UAAW,QACXS,MAAO,MACPiD,UAAU,GAEd,CACID,MAAO,SACPzD,UAAW,SACXS,MAAO,MACPiD,UAAU,GAEd,CACID,MAAO,WACPzD,UAAW,UACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAOoK,QAAQnK,OAAO,kBAGxC,CACIsC,MAAO,aACPzD,UAAW,eACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAO7B,mBAGzB,CACIoE,MAAO,WACPzD,UAAW,aACXS,MAAO,MACPiD,UAAU,EACVC,OAAQ,SAACC,EAAG1C,GACR,OAAO,mCAAGA,EAAO2C,iBAGzB,CACIJ,MAAO,SACPzD,UAAW,SACXS,MAAO,MACPiD,UAAU,GAEd,CACID,MAAO,YACPzD,UAAW,YACX2D,OAAQ,SAACC,EAAG1C,GAER,OADiB2B,EAAU3B,GAEvB,iCACI,cAAC,IAAW6C,KAAZ,CACIC,QAAS,kBAAMlB,EAAK5B,EAAOoB,MAC3B5D,MAAO,CACHuF,YAAa,GAHrB,kBAQA,cAAC,IAAWF,KAAZ,CACIC,QAAS,kBACL3I,IAAM,CACFC,OAAQf,EAAMgB,IAAI,wBAAD,OAA0B2F,EAAOoB,OACnD7G,MAAK,YAAuC,IAAD,IAAnCD,KAAQE,EAA2B,EAA3BA,KAAe2H,EAAY,EAArB1H,QACR,IAATD,EACAC,IAAQE,MAAM,CAAEC,QAASuH,IAEzBrB,EAAMJ,GAAYnG,MAAK,kBAAME,IAAQmD,QAAQ,CAAEhD,QAAS,aAAgBiG,EAAc,UAE3F5F,OAAM,SAAA+H,GAAG,OAAIvI,IAAQE,MAAM,CAAEC,QAASoI,EAAIC,SAASxI,cAE1D+C,MAAO,CACHuF,YAAa,GAbrB,oBAkBA,cAAC,IAAD,CAAYR,MAAM,kBAAkBW,UAAW,kBAAMrC,EAAc,KAAnE,SACI,4CAIR,cAAC,IAAWgC,KAAZ,CAAiBM,SAAyB,KAAfvC,EAAmBkC,QAAS,kBA5H1D,SAAC9C,GACVO,EAAK6C,eAAL,eACOpD,IAEPa,EAAcb,EAAOoB,KAwHoDiC,CAAKrD,IAAlE,qBAOc5B,KAAI,SAACkF,GAC/B,OAAKA,EAAId,SAIF,2BACAc,GADP,IAEIC,OAAQ,SAACvD,GAAD,MAAa,CACjBA,SACAwD,UAAW,OACX1E,UAAWwE,EAAIxE,UACfyD,MAAOe,EAAIf,MACXkB,QAAS9B,EAAU3B,OAVhBsD,KAef,OACI,qBAAK9F,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,SACI,qBAAKjE,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAM8G,KAAMA,EAAMmD,WAAW,EAA7B,SACI,cAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KApPP,SAAC,GASf,IACCC,EATJL,EAQE,EARFA,QACA3E,EAOE,EAPFA,UACAyD,EAME,EANFA,MAEAvC,GAIE,EALFwD,UAKE,EAJFxD,QAEA+D,GAEE,EAHF9B,MAGE,EAFF8B,UACGC,EACD,kBAqBF,OAlBIF,EADc,iBAAdhF,EACY,cAAC,GAAD,CACRhB,YAAY,4BACZ5B,aAAcyC,EACdH,aAAc,CAAC,CAAClD,MAAO0E,EAAO7B,eAAgBrB,MAAOkD,EAAOgB,iBAE3C,eAAdlC,EACK,cAAC,GAAD,CACRhB,YAAY,0BACZ5B,aAAc0C,EACdJ,aAAc,CAAC,CAAClD,MAAO0E,EAAO2C,aAAc7F,MAAOkD,EAAOiB,eAEzC,YAAdnC,EACK,cAAC,IAAD,IACS,WAAdA,EACK,cAAC,KAAD,IAEA,cAAC,IAAD,IAGZ,8CAAQkF,GAAR,aACKP,EACG,cAAC,IAAKpI,KAAN,CACI3B,KAAMoF,EACNtB,MAAO,CACHyG,OAAQ,GAEZ1I,MAAO,CACH,CACIE,UAAU,EACVhB,QAAQ,gBAAD,OAAkB8H,EAAlB,OARnB,SAYKuB,IAGLC,QAuMIM,UAAQ,EACRC,WAAYhK,EACZiK,QAASjC,EACTkC,aAAa,eACb9D,WAAU,2BACHA,GADG,IAENtB,SAAU,SAAAwI,GACN9G,EAAM,2BAAKJ,GAAN,IAAkB3D,QAAS6K,KAAQrN,MAAK,kBAAMsG,EAAc,kBCjTlF,SAASwJ,KAEpB,MAA8BjO,qBAA9B,mBAAOwM,EAAP,KAAgBC,EAAhB,KAiEA,OA/DAnH,qBAAU,WACNvH,IAAM,CACFC,OAAQd,EACRe,IAAK,6CACNE,MAAK,YAAyB,IAAdD,EAAa,EAArBA,KAAQA,KACfuO,EAAW,CACP9C,QAAS,CACLC,QAAS,QAEbC,OAAQ,CACNC,KAAM,SACNC,IAAK,UAEPC,QAAS,CACPX,MAAM,EACNY,QAAS,CACPC,KAAM,CAAEb,MAAM,GACdc,SAAU,CAAEd,MAAM,EAAMe,UAAU,GAClCC,QAAS,CAAEhB,MAAM,GACjBiB,YAAa,CAAEjB,MAAM,KAGzBkB,OAAQ,CACJ,CACIjN,KAAM,mCACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBC,SAAU,OACVC,UAAW,CACTC,aAAc,GAEhBC,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAKsL,WAAWxH,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAMuL,EAAEqF,UAE9D,CACI5Q,KAAM,+BACN8B,KAAM,MACN2J,OAAQ,CAAC,GAAI,KACbC,OAAQ,CAAC,MAAO,OAChBC,SAAU,SACVC,UAAW,CACPC,aAAc,GAElBjK,MAAO,CACHmK,MAAM,GAEVD,SAAU,CACNlK,MAAO,CACHmK,MAAM,IAGdnL,KAAMA,EAAK0P,OAAO5L,KAAI,SAAA6G,GAAC,MAAK,CAAEnI,MAAOmI,EAAES,MAAOhM,KAAMuL,EAAEgF,oBAKvE,IAEKrB,GAAW,cAAC,KAAD,CACf9C,OAAQ8C,EACRpL,MAAO,CAAEoJ,OAAQ,QACd,6BChEI,SAAS2D,GAAmB/Q,GAMvC,OAJAkI,qBAAU,WACNlI,EAAMqB,aACP,IAGC,eAAC,IAAD,CAAQ2C,MAAO,CAAEqJ,UAAW,KAA5B,UACI,cAACC,EAAA,EAAD,CAAOvH,MAAO,IACVwH,MAAO,QACPtN,UAAW,yBAFf,SAGI,eAAC,IAAD,WACI,cAAC,IAAK4B,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,oBAAV,uBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,qBAAV,sBAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAMS,GAAI,yBAAV,6BAMZ,cAAC,IAAD,UACI,cAAC,IAAD,CAASrC,UAAW,yBAA0B+D,MAAO,CAAEE,QAAS,QAAhE,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,KAAM,iBAAkBC,OAAO,EAAtC,SACI,qBAAKzJ,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhD,yDAIJ,cAAC,IAAD,CAAOsJ,KAAM,oBAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,qBAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,yBAAb,SACI,cAACqD,GAAD,kB,yCCnD1BG,GAAa,CAACC,SAAU,IAEf,SAASC,KACpB,OACI,sBAAKjR,UAAW,OAAhB,UACI,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAW,sBAAhB,wBACA,kGACA,sBAAKA,UAAW,QAAhB,UACI,cAACkR,GAAA,EAAD,CAAcnN,MAAOgN,KACrB,cAACI,GAAA,EAAD,CAAcC,aAAa,UAAUrN,MAAOgN,KAC5C,cAACM,GAAA,EAAD,CAAeD,aAAa,oBAAoBrN,MAAOgN,KACvD,cAACO,GAAA,EAAD,CAAoBF,aAAa,UAAUrN,MAAOgN,QAEtD,gCACI,cAAC,IAAD,CAAQhP,KAAM,UAAd,SACI,cAAC,IAAD,CAAMM,GAAI,SAAV,qBAEJ,cAAC,IAAD,CAAQN,KAAM,OAAd,SACI,cAAC,IAAD,CAAMM,GAAI,WAAV,6BAKZ,sBAAKrC,UAAW,UAAhB,UACI,qBAAKA,UAAW,sBAAhB,iCACA,gFAKJ,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAW,sBAAhB,mCACA,kFAKJ,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAW,sBAAhB,+BACA,8EAKJ,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAW,sBAAhB,mCACA,qFCrDD,SAASuR,KACpB,OACI,0CC2LOC,OApKf,WAEI,MAAwB7O,mBAAS,MAAjC,mBAAO8O,EAAP,KAAaC,EAAb,KAaA,SAAStQ,IACLV,IAAM,CACFC,OAAQd,EACRe,IAAK,oBACNE,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAeF,GAAa,EAAtBG,QAAsB,EAAbH,MACjB,IAATE,EACA2Q,EAAQ7Q,GAERQ,OAAOC,SAASC,KAAO,YAE5BC,OAAM,SAAA4C,GACL/C,OAAOC,SAASC,KAAO,YAc/B0G,qBAAU,WACN0J,SAAS7I,MAAQ,uBACjBpI,IAAM,CACFC,OAAQd,EACRe,IAAK,oBACNE,MAAK,YAAwC,IAAD,IAApCD,KAAQE,EAA4B,EAA5BA,KAAeF,GAAa,EAAtBG,QAAsB,EAAbH,MACjB,IAATE,GACA2Q,EAAQ7Q,QAGjB,IAEH,IAAM+Q,EACF,cAAC,IAAD,UACI,cAAC,IAAKhQ,KAAN,UACI,sBAAM5B,UAAW,WAAYqJ,QAzBzC,WACI3I,IAAM,CACFC,OAAQd,EACRe,IAAK,wBACNE,MAAK,WACJ4Q,EAAQ,MACRrQ,OAAOC,SAASC,KAAO,aAmBnB,yBAKZ,OACI,qBAAKvB,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuN,KAAM,IAAKC,OAAO,EAAzB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAO,EAA9B,SACI,cAAC,EAAD,CAAOpM,SAAUA,MAGrB,cAAC,IAAD,CAAOmM,KAAM,WAAb,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAM,OAAb,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMD,MAAO,OACTvJ,MAAO,CAAE+B,MAAO,KAChB+L,KAAM,aAFV,UAGI,cAAC,IAAKjQ,KAAN,CAAmBmN,KAAM,cAAC+C,GAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAMzP,GAAI,iBAAV,wBADW,KAKf,cAAC,IAAKT,KAAN,CAAmBmN,KAAM,cAACgD,GAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM1P,GAAI,mBAAV,yBADW,KAKf,cAAC,IAAKT,KAAN,CAAmBmN,KAAM,cAACiD,GAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM3P,GAAI,eAAV,qBADW,KAKf,cAAC,IAAKT,KAAN,CAAmBmN,KAAM,cAACkD,GAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM5P,GAAI,iBAAV,wBADW,KAKf,cAAC,IAAKT,KAAN,CAAmBmN,KAAM,cAACmD,GAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM7P,GAAI,mBAAV,yBADW,QAOT,OAAToP,GACG,cAAC,KAAD,CAAUU,QAASP,EAAMrF,QAAS,CAAC,SAAnC,SACI,oBAAGvM,UAAU,oBAAoBqJ,QAAS,SAAAjF,GAAC,OAAIA,EAAEgO,kBAAjD,UACI,cAAC,KAAD,CAAQvO,KAAM,GAAd,SAAmB4N,EAAKxR,KAAK,KADjC,QACqDwR,EAAKxR,KAD1D,IACgE,cAACoS,GAAA,EAAD,YAK5E,cAAC,KAAD,IACA,eAAC,IAAD,CAAStO,MAAO,CAAEE,QAAS,SAAUmJ,UAAW,uBAAhD,UACI,cAAC,IAAD,CAAQrJ,MAAO,CAAEqJ,UAAW,uBAA5B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOI,OAAO,EAAMD,KAAM,QAA1B,SACI,sBAAKxJ,MArHlB,CACnB+B,MAAO,OACP9B,gBAAiB,OACjB6B,QAAS,OACTyM,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBvO,QAAS,GACTkJ,OAAQ,KA6GwB,UACI,cAAC+D,GAAA,EAAD,CAAcnN,MAAO,CAAEiN,SAAU,IAAMI,aAAa,uBACpD,qBAAKpR,UAAW,eAAhB,sBAGA,oFAKR,cAAC,IAAD,CAAOwN,OAAO,EAAMD,KAAM,kBAA1B,SACI,cAAC,GAAD,CAAoBnM,SAAUA,MAElC,cAAC,IAAD,CAAOoM,OAAO,EAAMD,KAAM,oBAA1B,SACI,cAAC,GAAD,CAAsBnM,SAAUA,MAEpC,cAAC,IAAD,CAAOoM,OAAO,EAAMD,KAAM,gBAA1B,SACI,cAAC,GAAD,CAAkBnM,SAAUA,MAEhC,cAAC,IAAD,CAAOoM,OAAO,EAAMD,KAAM,kBAA1B,SACI,cAAC,GAAD,CAAoBnM,SAAUA,MAElC,cAAC,IAAD,CAAOoM,OAAO,EAAMD,KAAM,oBAA1B,SACI,cAAC,GAAD,CAAsBnM,SAAUA,MAEpC,cAAC,IAAD,CAAOoM,OAAO,EAAMD,KAAM,iBAA1B,SACI,cAACgE,GAAD,WAIZ,cAAC,IAAD,CAAQxN,MAAO,CAAE0O,UAAW,UAA5B,uDCpKbC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9R,MAAK,YAAkD,IAA/C+R,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlK,OACP,cAAC,IAAMmK,WAAP,UACE,cAAC,GAAD,MAEFxB,SAASyB,eAAe,SAM1BV,O","file":"static/js/main.f35b9539.chunk.js","sourcesContent":["export const POST = 'post';\r\nexport const GET = 'get';\r\nexport const DELETE = 'delete';\r\n\r\n\r\nexport const BASE = 'localhost:8080'\r\n","import './Login.scss';\r\nimport { Modal, Checkbox, Input, Button, Form } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { POST } from \"../../util/string\";\r\n\r\nexport default function Login(props) {\r\n\r\n    /**\r\n     * login\r\n     */\r\n    function login({ password, email }) {\r\n        axios({\r\n            method: POST,\r\n            url: '/api/account/login',\r\n            data: {\r\n                email: email,\r\n                password: password\r\n            }\r\n        }).then(({ data: { code, message } }) => {\r\n            if (code !== 0) {\r\n                Modal.error({ content: message });\r\n            } else {\r\n                props.loadUser();\r\n                window.location.hash = '/app/';\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={'login'}>\r\n            <div className={'form'}>\r\n                <div className={'bold font-16 m-b-10'}>Login</div>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{span: 8}}\r\n                    wrapperCol={{span: 16}}\r\n                    initialValues={{remember: true}}\r\n                    onFinish={login}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        rules={[\r\n                            { type: 'email' },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your email!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"remember\"\r\n                        valuePropName=\"checked\"\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                        <Link to='/sign-up' className={'m-l-20'}>Register</Link>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import './SignUp.scss';\r\nimport {Modal, Form, Space, Input, Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {POST} from \"../../util/string\";\r\n\r\nexport default function SignUp() {\r\n\r\n    /**\r\n     * sign up\r\n     */\r\n    function signUp({name, password, email, verifyPassword}) {\r\n        if (password !== verifyPassword) {\r\n            Modal.error({content: 'Passwords don\\'t match.'});\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: POST,\r\n            url: '/api/account/register',\r\n            data: {\r\n                name: name,\r\n                email: email,\r\n                password: password\r\n            }\r\n        }).then(({data: {code, message}}) => {\r\n            if (code !== 0) {\r\n                Modal.error({content: message});\r\n            } else {\r\n                window.location.hash = '/login/';\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={'sign-up'}>\r\n            <div className={'form'}>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{span: 8}}\r\n                    wrapperCol={{span: 16}}\r\n                    initialValues={{remember: true,}}\r\n                    onFinish={signUp}\r\n                    autoComplete={\"off\"}>\r\n                    <div className={'title'}>Register</div>\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your name!',\r\n                            },\r\n                        ]}\r\n                    ><Input/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {type: 'email'},\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your email!',\r\n                            },\r\n                        ]}\r\n                    ><Input/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Password\"\r\n                               name=\"password\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: 'Please input your password!',\r\n                                   },\r\n                               ]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Verify\"\r\n                               name=\"verifyPassword\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: 'Please input your password!',\r\n                                   },\r\n                               ]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={'more'}>\r\n                Already got an account? <Link to={'/login'}>login</Link>.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Button, DatePicker, Form, Input, message } from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport Radio from \"antd/es/radio/radio\";\r\nimport axios from \"axios\";\r\nimport { GET, POST } from \"../../../util/string\";\r\nimport { useState, useRef, useMemo } from \"react\";\r\nimport { Select, Spin } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst DebounceSelect = ({ fetchOptions, debounceTimeout = 50, ...props }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default function NewEmployee() {\r\n    const fetchDepartmentsByName = (departmentName) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/department/queryByName?name=${departmentName}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: item.name, value: item.id })))\r\n    }, fetchPositionsByName = (name) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/position/queryByName?name=${name}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: `${item.name}(${item.level})`, value: item.id })))\r\n    };\r\n\r\n    function addEmployee(data) {\r\n        console.log(data);\r\n        axios({\r\n            method: POST,\r\n            url: '/api/employee/add',\r\n            data: data\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 0) {\r\n                message.success('Success!');\r\n            } else if (code === 503) {\r\n                message.error('This email has been taken');\r\n            } else {\r\n                console.log(response);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n            <div className={'bold font-16 m-b-20'}>Add New Employee</div>\r\n            <Form labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={addEmployee}>\r\n                <Form.Item label={\"Name\"} name={'name'}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input name',\r\n                        },\r\n                    ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label={'Email'} name={'email'} rules={[\r\n                    { type: 'email' },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input email',\r\n                    },\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label={\"Enroll Date\"} name={'enrolTime'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input enrol time',\r\n                    },\r\n                ]}>\r\n                    <DatePicker placeholder={'Select'} />\r\n                </Form.Item>\r\n                <Form.Item label={\"Birthday\"} name={'birthday'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input birthday',\r\n                    },\r\n                ]}>\r\n                    <DatePicker placeholder={'Select'} />\r\n                </Form.Item>\r\n                <Form.Item label={\"Contact\"} name={'phoneNumber'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input contact information',\r\n                    },\r\n                ]}>\r\n                    <Input placeholder={'Phone number'} />\r\n                </Form.Item>\r\n                <Form.Item label={\"Address\"} name={'address'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input address!',\r\n                    },\r\n                ]}>\r\n                    <TextArea showCount maxLength={140} />\r\n                </Form.Item>\r\n                <Form.Item label={'Gender'} name={'gender'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input gender',\r\n                    },\r\n                ]}>\r\n                    <Radio.Group>\r\n                        <Radio value={'F'}>Female</Radio>\r\n                        <Radio value={'M'}>Male</Radio>\r\n                        <Radio value={'O'}>Other</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item label={\"Department Name\"} name={'departmentId'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Department Name',\r\n                    }\r\n                ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select employees by email\"\r\n                        fetchOptions={fetchDepartmentsByName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label={\"Position Name\"} name={'positionId'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Position Name',\r\n                    }\r\n                ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select positions by name\"\r\n                        fetchOptions={fetchPositionsByName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n                    <Button type={'primary'} htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef, useMemo, useEffect } from 'react';\r\nimport { message, Radio, Table, Input, InputNumber, Popconfirm, Form, Typography, DatePicker } from 'antd';\r\nimport axios from \"axios\";\r\nimport { GET, POST } from \"../../../util/string\";\r\nimport { Select, Spin } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\nimport moment from 'moment';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst DebounceSelect = ({ fetchOptions, firstOptions, debounceTimeout = 50, ...props }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState(firstOptions);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            allowClear\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function EmployeeManagement() {\r\n\r\n    const fetchDepartmentsByName = (departmentName) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/department/queryByName?name=${departmentName}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: item.name, value: item.id })))\r\n    }, fetchPositionsByName = (name) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/position/queryByName?name=${name}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: `${item.name}(${item.level})`, value: item.id })))\r\n    };\r\n\r\n    const getColumnSearchProps = (dataIndex, type) => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => {\r\n            if (type === 'date') {\r\n                return (<div style={{ padding: 8 }}>\r\n                    <DatePicker\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => { setSelectedKeys(e ? [e] : []); confirm(); }}\r\n                        style={{ marginBottom: 8, display: 'block', width: '90px' }}\r\n                    />\r\n                </div>)\r\n            } else if (type === 'department') {\r\n                return (<div style={{ padding: 8 }}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select department by name\"\r\n                        fetchOptions={fetchDepartmentsByName}\r\n                        onChange={e => { setSelectedKeys(e ? [e] : []); confirm(); }}\r\n                        style={{ marginBottom: 8, display: 'block', width: '140px' }}\r\n                    />\r\n                </div>)\r\n            } else if (type === 'position') {\r\n                return (<div style={{ padding: 8 }}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select position by name\"\r\n                        fetchOptions={fetchPositionsByName}\r\n                        onChange={e => { setSelectedKeys(e ? [e] : []); confirm(); }}\r\n                        style={{ marginBottom: 8, display: 'block', width: '140px' }}\r\n                    />\r\n                </div>)\r\n            } else {\r\n                return (<div style={{ padding: 8 }}>\r\n                    <Input\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => confirm()}\r\n                        style={{ marginBottom: 8, display: 'block', width: '100px' }}\r\n                    />\r\n                </div>)\r\n            }\r\n\r\n        },\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => {\r\n            if (type === 'date') {\r\n                return record[dataIndex].format('YYYY-MM-DD') === value.format('YYYY-MM-DD');\r\n            } else if (type == 'text') {\r\n                return record[dataIndex]\r\n                    ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                    : ''\r\n            } else {\r\n                return record[dataIndex] == value;\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    const EditableCell = ({\r\n        editing,\r\n        dataIndex,\r\n        title,\r\n        inputType,\r\n        record,\r\n        index,\r\n        children,\r\n        ...restProps\r\n    }) => {\r\n        let inputNode;\r\n        if (dataIndex === 'departmentId') {\r\n            inputNode = <DebounceSelect\r\n                placeholder=\"Select department by name\"\r\n                fetchOptions={fetchDepartmentsByName}\r\n                firstOptions={[{ label: record.departmentName, value: record.departmentId }]}\r\n            />;\r\n        } else if (dataIndex === 'positionId') {\r\n            inputNode = <DebounceSelect\r\n                placeholder=\"Select position by name\"\r\n                fetchOptions={fetchPositionsByName}\r\n                firstOptions={[{ label: record.positionName, value: record.positionId }]}\r\n            />;\r\n        } else if (dataIndex === 'birthday' || dataIndex === 'resignTime' || dataIndex === 'enrolTime') {\r\n            inputNode = <DatePicker />\r\n        } else if (dataIndex === 'gender') {\r\n            inputNode = <Radio.Group>\r\n                <Radio value={'F'}>Female</Radio>\r\n                <Radio value={'M'}>Male</Radio>\r\n                <Radio value={'O'}>Other</Radio>\r\n            </Radio.Group>\r\n        } else {\r\n            inputNode = <Input />;\r\n        }\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ? (\r\n                    <Form.Item\r\n                        name={dataIndex}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: `Please Input ${title}!`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        {inputNode}\r\n                    </Form.Item>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    };\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [data, setData] = useState([]),\r\n        [pagination, setPagination] = useState({\r\n            current: 1,\r\n            pageSize: 10,\r\n        }),\r\n        [editingKey, setEditingKey] = useState(''),\r\n        fetch = (param) => {\r\n            return axios({\r\n                method: GET,\r\n                url: `/api/employee/page?page=${param.current}&size=${param.pageSize}${(param.name && '&name=' + param.name) || ''}${(param.departmentId && '&departmentId=' + param.departmentId) || ''}${(param.positionId && '&positionId=' + param.positionId) || ''}${(param.enrolTime && '&enrolTime=' + param.enrolTime[0].format('YYYY-MM-DD')) || ''}`\r\n            }).then(({ data: { code, message, data } }) => {\r\n                if (code !== 0) {\r\n                    message.error({ content: message })\r\n                } else {\r\n                    setData(data.list.map(item => {\r\n                        return { ...item, key: item.id, birthday: item.birthday && moment(item.birthday), resignTime: item.birthday && moment(item.resignTime), enrolTime: item.birthday && moment(item.enrolTime) };\r\n                    }));\r\n                    setPagination({\r\n                        current: data.pageNum,\r\n                        pageSize: data.pageSize,\r\n                        total: data.total\r\n                    })\r\n                }\r\n            })\r\n        };\r\n\r\n    useEffect(() => {\r\n        fetch(pagination)\r\n    }, [])\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                axios({\r\n                    method: POST,\r\n                    url: `/api/employee/update/${key}`,\r\n                    data: row\r\n                }).then(({ data: { code, message: msg } }) => {\r\n                    if (code !== 0) {\r\n                        message.error({ content: msg });\r\n                    } else {\r\n                        message.success({ content: \"success\" })\r\n                        newData.splice(index, 1, { ...item, ...row });\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                        fetch(pagination);\r\n                    }\r\n                })\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            width: 120,\r\n            dataIndex: 'name',\r\n            ...getColumnSearchProps('name', 'text'),\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 120,\r\n            ...getColumnSearchProps('email', 'text'),\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            width: 120,\r\n            ...getColumnSearchProps('address', 'text'),\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Contract',\r\n            dataIndex: 'phoneNumber',\r\n            width: 120,\r\n            ...getColumnSearchProps('phoneNumber', 'text'),\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Birthday',\r\n            dataIndex: 'birthday',\r\n            width: 120,\r\n            ...getColumnSearchProps('birthday', 'date'),\r\n            editable: true,\r\n            render: (_, record) => {\r\n                return <>{record.birthday && record.birthday != null && record.birthday.format(\"YYYY-MM-DD\")}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Enroll Date',\r\n            dataIndex: 'enrolTime',\r\n            width: 120,\r\n            editable: true,\r\n            ...getColumnSearchProps('enrolTime', 'date'),\r\n            render: (_, record) => {\r\n                return <>{record.enrolTime && record.birthday != null && record.enrolTime.format(\"YYYY-MM-DD\")}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Resign Date',\r\n            dataIndex: 'resignTime',\r\n            width: 120,\r\n            editable: true,\r\n            ...getColumnSearchProps('resignTime', 'date'),\r\n            render: (_, record) => {\r\n                return <>{record.resignTime && record.birthday != null && record.resignTime.format(\"YYYY-MM-DD\")}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Gender',\r\n            dataIndex: 'gender',\r\n            width: 80,\r\n            editable: true,\r\n            ...getColumnSearchProps('gender', 'text'),\r\n            render: (_, record) => {\r\n                return <>{record['gender']}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Department',\r\n            dataIndex: 'departmentId',\r\n            width: 150,\r\n            editable: true,\r\n            ...getColumnSearchProps('departmentId', 'department'),\r\n            render: (_, record) => {\r\n                return <>{record.departmentName}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Position',\r\n            dataIndex: 'positionId',\r\n            width: 150,\r\n            editable: true,\r\n            ...getColumnSearchProps('positionId', 'position'),\r\n            render: (_, record) => {\r\n                return <>{record.positionName}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            width: 200,\r\n            fixed: 'right',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <Typography.Link\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Typography.Link>\r\n                        <Typography.Link\r\n                            onClick={() =>\r\n                                axios({\r\n                                    method: POST, url: `/api/employee/delete/${record.key}`\r\n                                }).then(({ data: { code, message: msg } }) => {\r\n                                    if (code !== 0) {\r\n                                        message.error({ content: msg })\r\n                                    } else {\r\n                                        fetch(pagination).then(() => message.success({ content: \"success\" }) && setEditingKey(''))\r\n                                    }\r\n                                }).catch(err => message.error({ content: err.toJSON().message }))\r\n                            }\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </Typography.Link>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\r\n                            <a>Cancel</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Edit\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n            <div className={'bold font-16 m-b-10'}>\r\n                <Form form={form} component={false}>\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        onChange={(pagination, filters, sorter, extra) => {\r\n                            fetch({ ...pagination, ...filters }).then(() => setEditingKey(''))\r\n                        }}\r\n                        bordered\r\n                        dataSource={data}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={pagination}\r\n                        scroll={{ x: 1800 }}\r\n                    />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { GET } from \"../../../util/string\";\nimport ReactECharts from 'echarts-for-react';\n\n\nexport default function AnalysisEmployee() {\n\n    const [gender, setGender] = useState();\n    const [departmentAndLevel, setDepartmentAndLevel] = useState();\n    const [category, setCategory] = useState();\n\n    useEffect(() => {\n        axios({\n            method: GET,\n            url: '/api/employee/countByGender'\n        }).then(({ data: { data } }) => {\n            setCategory(data.map(i => i.GENDER))\n            setGender({\n                name: 'Count By Gender',\n                type: 'pie',\n                radius: [20, 140],\n                center: ['25%', '50%'],\n                roseType: 'area',\n                itemStyle: {\n                    borderRadius: 5\n                },\n                emphasis: {\n                    label: {\n                        show: true\n                    }\n                },\n                data: data.map(i => ({ value: i.COUNT, name: i.GENDER }))\n            })\n        })\n        axios({\n            method: GET,\n            url: '/api/employee/countByDepartmentAndLevel'\n        }).then(({ data: { data } }) => {\n            setDepartmentAndLevel({\n                name: 'Count By Department And Position',\n                type: 'pie',\n                radius: [20, 140],\n                center: ['75%', '50%'],\n                z: 100,\n                roseType: 'radius',\n                itemStyle: {\n                    borderRadius: 5\n                },\n                emphasis: {\n                    label: {\n                        show: true\n                    }\n                },\n                data: data.map(i => ({ value: i.COUNT, name: `${i.department.name} (${i.position.name})` }))\n            })\n        })\n    }, [])\n\n    return (gender && <ReactECharts\n        option={{\n            tooltip: {\n                trigger: 'item'\n            },\n            legend: {\n                left: 'center',\n                top: 'bottom'\n            },\n            toolbox: {\n                show: true,\n                feature: {\n                    mark: { show: true },\n                    dataView: { show: true, readOnly: false },\n                    restore: { show: true },\n                    saveAsImage: { show: true }\n                }\n            },\n            series: [gender, departmentAndLevel]\n        }}\n        style={{ height: 400 }}\n    />) || <></>;\n}\n","import './EmployeeManagement.scss';\r\nimport { Layout, Menu } from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport { Content } from \"antd/es/layout/layout\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport NewEmployee from \"./new/NewEmployee\";\r\nimport ManageEmployee from \"./manage/ManageEmployee\";\r\nimport { useEffect } from \"react\";\r\nimport AnalysisEmployee from \"./analysis/AnalysisEmployee\";\r\n\r\n\r\nexport default function EmployeeManagement(props) {\r\n\r\n    useEffect(() => {\r\n        props.loadUser();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: 400 }}>\r\n            <Sider width={200}\r\n                theme={'light'}\r\n                className={'site-layout-background'}>\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employee/add'}>\r\n                            Add new\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employee/main'}>\r\n                            Manage\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employee/analysis'}>\r\n                            Analysis\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content className={'site-layout-background'} style={{ padding: '24px' }}>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route path={'/app/employee/'} exact={true}>\r\n                                <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n                                    Please click on the sider to get started.\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={'/app/employee/add'}>\r\n                                <NewEmployee />\r\n                            </Route>\r\n                            <Route path={'/app/employee/main'}>\r\n                                <ManageEmployee />\r\n                            </Route>\r\n                            <Route path={'/app/employee/analysis'}>\r\n                                <AnalysisEmployee />\r\n                            </Route>\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import {Button, DatePicker, Form, message, Select, Spin} from \"antd\";\r\nimport Radio from \"antd/es/radio/radio\";\r\nimport axios from \"axios\";\r\nimport {GET, POST} from \"../../../util/string\";\r\nimport {useMemo, useRef, useState} from \"react\";\r\nimport debounce from 'lodash/debounce';\r\n\r\n\r\n\r\nconst DebounceSelect = ({ fetchOptions, debounceTimeout = 50, ...props }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default function NewAttendance() {\r\n\r\n    const fetchEmployeesByEmail = (email) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/employee/queryByEmail?email=${email}`\r\n        }).then(({data: {code, message, data}}) => data.map(item => ({label: item.email, value: item.id})))\r\n    };\r\n\r\n    function addAttendance(data) {\r\n        console.log(data);\r\n        axios({\r\n            method: POST,\r\n            url: '/api/attendance/add',\r\n            data: data\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 0) {\r\n                message.success('Success!');\r\n            } else {\r\n                message.error(response.data.message);\r\n                console.log(response);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#fff', padding: 24}}>\r\n            <div className={'bold font-16 m-b-20'}>Add Attendance</div>\r\n            <Form labelCol={{span: 4}}\r\n                  wrapperCol={{span: 16}}\r\n                  onFinish={addAttendance}>\r\n                <Form.Item label={\"Employee Email\"} name={'eid'}\r\n                           rules={[\r\n                               {\r\n                                   required: true,\r\n                                   message: 'Please input employee email',\r\n                               },\r\n                           ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select employees by email\"\r\n                        fetchOptions={fetchEmployeesByEmail}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item label={\"Start Date\"} name={'start'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input start date',\r\n                    },\r\n                ]}>\r\n                    <DatePicker placeholder={'Select'}/>\r\n                </Form.Item>\r\n                <Form.Item label={\"End Date\"} name={'end'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input end date',\r\n                    },\r\n                ]}>\r\n                    <DatePicker placeholder={'Select'}/>\r\n                </Form.Item>\r\n                <Form.Item label={'Type'} name={'type'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input type',\r\n                    },\r\n                ]}>\r\n                    <Radio.Group>\r\n                        <Radio value={'L'}>Leave</Radio>\r\n                        <Radio value={'E'}>Evection</Radio>\r\n                        <Radio value={'O'}>Overtime</Radio>\r\n                        <Radio value={'D'}>Deferred holidays</Radio>\r\n                        <Radio value={'S'}>Shut down</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{offset: 4, span: 16}}>\r\n                    <Button type={'primary'} htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useRef, useMemo, useEffect} from 'react';\r\nimport {message, Table, Input, InputNumber, Popconfirm, Form, Typography, DatePicker} from 'antd';\r\nimport axios from \"axios\";\r\nimport {DELETE, GET, POST} from \"../../../util/string\";\r\nimport {Select, Spin} from 'antd';\r\nimport debounce from 'lodash/debounce';\r\nimport moment from \"moment\";\r\nimport {Option} from \"antd/es/mentions\";\r\n\r\nconst DebounceSelect = ({fetchOptions, firstOptions, debounceTimeout = 50, ...props}) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState(firstOptions);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\"/> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function ManageAttendance() {\r\n\r\n    const fetchJobOffersByName = (jobName) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/joboffer/queryByName?name=${jobName}`\r\n        }).then(({data: {code, message, data}}) => data.map(item => ({label: item.title, value: item.id})))\r\n    };\r\n\r\n    const EditableCell = ({\r\n                              editing,\r\n                              dataIndex,\r\n                              title,\r\n                              inputType,\r\n                              record,\r\n                              index,\r\n                              children,\r\n                              ...restProps\r\n                          }) => {\r\n        let inputNode = <Input/>;\r\n        if (dataIndex === 'attendanceId') {\r\n            inputNode = <DebounceSelect\r\n                placeholder=\"Select job offer by name\"\r\n                fetchOptions={fetchJobOffersByName}\r\n                firstOptions={[{label: record.jobTitle, value: record.jobOfferId}]}\r\n            />;\r\n        } else if (dataIndex === 'startDate') {\r\n            inputNode = <DatePicker/>;\r\n        } else if (dataIndex === 'endDate') {\r\n            inputNode = <DatePicker/>;\r\n        } else if (dataIndex === 'type') {\r\n            inputNode =\r\n                <Select defaultValue={'L'}>\r\n                    <Option value={'L'}>Leave</Option>\r\n                    <Option value={'E'}>Evection</Option>\r\n                    <Option value={'O'}>Overtime</Option>\r\n                    <Option value={'D'}>Deferred holidays</Option>\r\n                    <Option value={'S'}>Shut down</Option>\r\n                </Select>\r\n        }\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ? (\r\n                    <Form.Item\r\n                        name={dataIndex}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: `Please Input ${title}!`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        {inputNode}\r\n                    </Form.Item>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    };\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [data, setData] = useState([]),\r\n        [pagination, setPagination] = useState({\r\n            current: 1,\r\n            pageSize: 10,\r\n        }),\r\n        [editingKey, setEditingKey] = useState(''),\r\n        fetch = (pagination) => {\r\n            return axios({\r\n                method: GET,\r\n                url: `/api/attendance/page?page=${pagination.current}&size=${pagination.pageSize}`\r\n            }).then(({data: {code, message, data}}) => {\r\n                if (code !== 0) {\r\n                    message.error({content: message})\r\n                } else {\r\n                    setData(data.list.map(item => {\r\n                        return {\r\n                            ...item,\r\n                            key: item.id,\r\n                            startDate: moment(item.startDate),\r\n                            endDate: moment(item.endDate)\r\n                        };\r\n                    }));\r\n                    setPagination({\r\n                        current: data.pageNum,\r\n                        pageSize: data.pageSize,\r\n                        total: data.total\r\n                    });\r\n                }\r\n            })\r\n        };\r\n\r\n    useEffect(() => {\r\n        fetch(pagination)\r\n    }, [])\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                axios({\r\n                    method: POST,\r\n                    url: `/api/attendance/update/${key}`,\r\n                    data: row\r\n                }).then(({data: {code, message: msg}}) => {\r\n                    if (code !== 0) {\r\n                        message.error({content: msg});\r\n                    } else {\r\n                        message.success({content: \"success\"})\r\n                        newData.splice(index, 1, {...item, ...row});\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                        fetch(pagination);\r\n                    }\r\n                })\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Employee Email',\r\n            dataIndex: 'email',\r\n            width: '20%'\r\n        },\r\n        {\r\n            title: 'Start Time',\r\n            dataIndex: 'startDate',\r\n            width: '20%',\r\n            editable: true,\r\n            render: (_, record) => {\r\n                return <>{record.startDate.format(\"YYYY-MM-DD\")}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'End Time',\r\n            dataIndex: 'endDate',\r\n            width: '20%',\r\n            editable: true,\r\n            render: (_, record) => {\r\n                return <>{record.endDate.format(\"YYYY-MM-DD\")}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: '20%',\r\n            editable: true,\r\n            render: (_, record) => {\r\n                return <>{formatType(record.type)}</>\r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <Typography.Link\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Typography.Link>\r\n                        <Typography.Link\r\n                            onClick={() =>\r\n                                axios({\r\n                                    method: DELETE, url: `/api/attendance/delete/${record.key}`\r\n                                }).then(({data: {code, message: msg}}) => {\r\n                                    if (code !== 0) {\r\n                                        message.error({content: msg})\r\n                                    } else {\r\n                                        fetch(pagination).then(() => message.success({content: \"success\"}) && setEditingKey(''))\r\n                                    }\r\n                                }).catch(err => message.error({content: err.toJSON().message}))\r\n                            }\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </Typography.Link>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\r\n                            <a>Cancel</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Edit\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#fff', padding: 24}}>\r\n            <div className={'bold font-16 m-b-10'}>\r\n                <Form form={form} component={false}>\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        bordered\r\n                        dataSource={data}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            ...pagination,\r\n                            onChange: page => {\r\n                                fetch({...pagination, current: page}).then(() => setEditingKey(''))\r\n                            },\r\n                        }}\r\n                    />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction formatType(T) {\r\n    switch (T) {\r\n        case 'L':\r\n            return 'Leave';\r\n        case 'E':\r\n            return 'Evection';\r\n        case 'O':\r\n            return 'Overtime';\r\n        case 'D':\r\n            return 'Deferred holidays';\r\n        case 'S':\r\n            return 'Shut down';\r\n    }\r\n\r\n\r\n}\r\n","import './AttendanceManagement.scss';\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport {Layout, Menu} from \"antd\";\r\nimport {HashRouter, Link} from \"react-router-dom\";\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport NewAttendance from \"./new/NewAttendance\";\r\nimport ManageAttendance from \"./manage/ManageAttendance\";\r\nimport {useEffect} from \"react\";\r\n\r\nexport default function AttendanceManagement (props) {\r\n\r\n    useEffect(() => {\r\n        props.loadUser();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{minHeight: 400}}>\r\n            <Sider width={200}\r\n                   theme={'light'}\r\n                   className={'site-layout-background'}>\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/attendance/add'}>\r\n                            Add new\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/attendance/main'}>\r\n                            Manage\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content className={'site-layout-background'} style={{padding: '24px'}}>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route path={'/app/attendance/'} exact={true}>\r\n                                <div style={{backgroundColor: '#fff', padding: 24}}>\r\n                                    Please click on the sider to get started.\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={'/app/attendance/add'}>\r\n                                <NewAttendance/>\r\n                            </Route>\r\n                            <Route path={'/app/attendance/main'}>\r\n                                <ManageAttendance/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import {Button, InputNumber, Form, message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {GET, POST} from \"../../../util/string\";\r\nimport {useState, useRef, useMemo} from \"react\";\r\nimport {Select, Spin} from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst DebounceSelect = ({fetchOptions, debounceTimeout = 50, ...props}) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\"/> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function NewSalary() {\r\n    const fetchEmployeesByEmail = (email) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/employee/queryByEmail?email=${email}`\r\n        }).then(({data: {code, message, data}}) => data.map(item => ({label: item.email, value: item.id})))\r\n    };\r\n\r\n    function addSalary(data) {\r\n        console.log(data);\r\n        axios({\r\n            method: POST,\r\n            url: '/api/salary/add',\r\n            data: {...data}\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 0) {\r\n                message.success('Success!');\r\n            } else {\r\n                message.error(response.data.message);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#fff', padding: 24}}>\r\n            <div className={'bold font-16 m-b-20'}>Add New Salary</div>\r\n            <Form labelCol={{span: 4}}\r\n                  wrapperCol={{span: 16}}\r\n                  onFinish={addSalary}>\r\n                <Form.Item label={\"Employee Email\"} name={'employeeId'}\r\n                           rules={[\r\n                               {\r\n                                   required: true,\r\n                                   message: 'Please input employee email',\r\n                               },\r\n                           ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select employees by email\"\r\n                        fetchOptions={fetchEmployeesByEmail}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label={\"Amount\"} name={'amount'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input amount',\r\n                    },\r\n                ]}>\r\n                    <InputNumber\r\n                        min=\"0\"\r\n                        step=\"0.000001\"\r\n                        stringMode\r\n                        style={{width: 200}}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{offset: 4, span: 16}}>\r\n                    <Button type={'primary'} htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { message, Table, Input, Button, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport axios from \"axios\";\nimport { GET, POST } from \"../../../util/string\";\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Row, Col, Divider } from 'antd';\n\nexport default function SalaryManagement() {\n\n    const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n    }) => {\n        const inputNode = inputType === 'number' ? <InputNumber min=\"0\"\n            step=\"0.000001\"\n            stringMode\n            style={{ width: 200 }}\n        /> : <Input />;\n        return (\n            <td {...restProps}>\n                {editing ? (\n                    <Form.Item\n                        name={dataIndex}\n                        style={{\n                            margin: 0,\n                        }}\n                        rules={[\n                            {\n                                required: true,\n                                message: `Please Input ${title}!`,\n                            },\n                        ]}\n                    >\n                        {inputNode}\n                    </Form.Item>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    };\n\n\n    const [form] = Form.useForm();\n\n    const [data, setData] = useState([]),\n        [pagination, setPagination] = useState({\n            current: 1,\n            pageSize: 10,\n        }),\n        [editingKey, setEditingKey] = useState(''),\n        fetch = (param) => {\n            return axios({\n                method: GET,\n                url: `/api/salary/page?page=${param.current}&size=${param.pageSize}${(param.amount && param.amount[0].start && '&amountStart=' + param.amount[0].start) || ''}${(param.amount && param.amount[0].end && '&amountEnd=' + param.amount[0].end) || ''}`\n            }).then(({ data: { code, message, data } }) => {\n                if (code !== 0) {\n                    message.error({ content: message })\n                } else {\n                    setData(data.list.map(item => {\n                        return { ...item, key: item.id };\n                    }));\n                    setPagination({\n                        current: data.pageNum,\n                        pageSize: data.pageSize,\n                        total: data.total\n                    })\n                }\n            })\n        };\n\n    useEffect(() => {\n        fetch(pagination)\n    }, [])\n\n    const isEditing = (record) => record.key === editingKey;\n\n    const edit = (record) => {\n        form.setFieldsValue({\n            ...record,\n        });\n        setEditingKey(record.key);\n    };\n\n    const save = async (key) => {\n        try {\n            const row = await form.validateFields();\n            const newData = [...data];\n            const index = newData.findIndex((item) => key === item.key);\n\n            if (index > -1) {\n                const item = newData[index];\n                axios({\n                    method: POST,\n                    url: `/api/salary/update/${key}`,\n                    data: row\n                }).then(({ data: { code, message: msg } }) => {\n                    if (code !== 0) {\n                        message.error({ content: msg });\n                    } else {\n                        message.success({ content: \"success\" })\n                        newData.splice(index, 1, { ...item, ...row });\n                        setData(newData);\n                        setEditingKey('');\n                        fetch(pagination);\n                    }\n                })\n            } else {\n                newData.push(row);\n                setData(newData);\n                setEditingKey('');\n            }\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n    const [form1] = Form.useForm();\n    const columns = [\n        {\n            title: 'Employee',\n            dataIndex: 'employeeName',\n            width: '25%'\n        },\n        {\n            title: 'Department',\n            dataIndex: 'departmentName',\n            width: '15%',\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            width: '40%',\n            editable: true,\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => {\n                return (<div style={{ padding: 8, margin: 10, width: '300px' }}>\n                    <Form labelCol={{ span: 10 }} form={form1}\n                        wrapperCol={{ span: 150 }}\n                    >\n                        <Form.Item label={\"Start:\"} name={'start'}>\n                            <InputNumber\n\n                                min=\"0\"\n                                step=\"0.000001\"\n                                stringMode\n                                value={selectedKeys[0] && selectedKeys[0].start}\n                                onChange={e => setSelectedKeys(e ? [{ ...selectedKeys[0], start: e }] : [])}\n                                style={{ marginBottom: 8, display: 'block', width: '100px' }}\n                            />\n                        </Form.Item>\n                        <Form.Item label={\"End:\"} name={'end'} >\n                            <InputNumber\n                                min=\"0\"\n                                step=\"0.000001\"\n                                stringMode\n                                value={selectedKeys[0] && selectedKeys[0].start}\n                                onChange={e => setSelectedKeys(e ? [{ ...selectedKeys[0], end: e }] : [])}\n                                style={{ marginBottom: 8, display: 'block', width: '100px' }}\n                            />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                            <Button type={'primary'} htmlType=\"submit\" onClick={() => confirm()}\n                                icon={<SearchOutlined />}\n                                size=\"small\">\n                                Search\n                            </Button> &nbsp;\n                            <Button onClick={() => { clearFilters(); setSelectedKeys([]); form1.resetFields();}} size=\"small\" style={{ width: 90 }}>\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>)\n            },\n            filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n            onFilter: ({ start, end }, record) => {\n                return record.amount >= start && record.amount < end;\n            }\n        },\n        {\n            title: 'operation',\n            dataIndex: 'operation',\n            render: (_, record) => {\n                const editable = isEditing(record);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(record.key)}\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Save\n                        </Typography.Link>\n                        <Typography.Link\n                            onClick={() =>\n                                axios({\n                                    method: POST, url: `/api/salary/delete/${record.key}`\n                                }).then(({ data: { code, message: msg } }) => {\n                                    if (code !== 0) {\n                                        message.error({ content: msg })\n                                    } else {\n                                        fetch(pagination).then(() => message.success({ content: \"success\" }) && setEditingKey(''))\n                                    }\n                                }).catch(err => message.error({ content: err.toJSON().message }))\n                            }\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Delete\n                        </Typography.Link>\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\n                            <a>Cancel</a>\n                        </Popconfirm>\n                    </span>\n                ) : (\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n                        Edit\n                    </Typography.Link>\n                );\n            },\n        },\n    ];\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (record) => ({\n                record,\n                inputType: col.dataIndex === 'amount' ? 'number' : 'text',\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(record),\n            }),\n        };\n    });\n\n    return (\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\n            <div className={'bold font-16 m-b-10'}>\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        onChange={(pagination, filters, sorter, extra) => {\n                            fetch({ ...pagination, ...filters }).then(() => setEditingKey(''))\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={mergedColumns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            ...pagination\n                        }}\n                    />\n                </Form>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { GET } from \"../../../util/string\";\nimport ReactECharts from 'echarts-for-react';\n\n\nexport default function AnalysisSalary() {\n\n    const [option, setOption] = useState();\n    const [option1, setOption1] = useState();\n    useEffect(() => {\n        axios({\n            method: GET,\n            url: '/api/salary/amountSumByDevelopment'\n        }).then(({ data: { data } }) => {\n            setOption({\n                title: {\n                    text: 'Sum Of Departments'\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                xAxis: {\n                    type: 'category',\n                    data: data.map(i => i.DEPARTMENT_NAME)\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        data: data.map(i => i.SUM),\n                        type: 'bar',\n                        showBackground: true,\n                        backgroundStyle: {\n                            color: 'rgba(180, 180, 180, 0.2)'\n                        }\n                    }\n                ]\n            })\n        })\n    }, [])\n\n    useEffect(() => {\n        axios({\n            method: GET,\n            url: '/api/salary/amountAvgByDevelopment'\n        }).then(({ data: { data } }) => {\n            setOption1({\n                title: {\n                    text: 'Avg Of Departments'\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                xAxis: {\n                    type: 'category',\n                    data: data.map(i => i.DEPARTMENT_NAME)\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        data: data.map(i => i.SUM),\n                        type: 'bar',\n                        showBackground: true,\n                        backgroundStyle: {\n                            color: 'rgba(180, 180, 180, 0.2)'\n                        }\n                    }\n                ]\n            })\n        })\n    }, [])\n\n    return (option && option1 && <div>\n        <ReactECharts\n            option={option}\n            style={{ height: 400 }}\n        />\n        <ReactECharts\n            option={option1}\n            style={{ height: 400 }}\n        />\n    </div>) || <></>;\n}\n","import './SalaryManagement.scss';\r\nimport { Layout, Menu } from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport { Content } from \"antd/es/layout/layout\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport NewSalary from \"./new/NewSalary\";\r\nimport ManageSalary from \"./manage/ManageSalary\";\r\nimport AnalysisSalary from \"./analysis/AnalysisSalary\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function SalaryManagement(props) {\r\n\r\n    useEffect(() => {\r\n        props.loadUser();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: 400 }}>\r\n            <Sider width={200}\r\n                theme={'light'}\r\n                className={'site-layout-background'}>\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/salary/add'}>\r\n                            Add new\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/salary/main'}>\r\n                            Manage\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/salary/analysis'}>\r\n                            Analysis\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content className={'site-layout-background'} style={{ padding: '24px' }}>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route path={'/app/salary/'} exact={true}>\r\n                                <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n                                    Please click on the sider to get started.\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={'/app/salary/add'}>\r\n                                <NewSalary />\r\n                            </Route>\r\n                            <Route path={'/app/salary/main'}>\r\n                                <ManageSalary />\r\n                            </Route>\r\n                            <Route path={'/app/salary/analysis'}>\r\n                                <AnalysisSalary />\r\n                            </Route>\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import { Button, Form, Input, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { GET, POST } from \"../../../util/string\";\r\nimport { useState, useRef, useMemo } from \"react\";\r\nimport { Select, Spin } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst DebounceSelect = ({ fetchOptions, debounceTimeout = 50, ...props }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function NewEmployment() {\r\n    const fetchJobOffersByName = (jobName) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/joboffer/queryByName?name=${jobName}`\r\n        }).then(({data: {code, message, data}}) => data.map(item => ({label: item.title, value: item.id})))\r\n    };\r\n\r\n    function addEmployment(data) {\r\n        console.log(data);\r\n        axios({\r\n            method: POST,\r\n            url: '/api/employment/add',\r\n            data: data\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 0) {\r\n                message.success('Success!');\r\n            } else {\r\n                console.log(response);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n            <div className={'bold font-16 m-b-20'}>Add New Employment</div>\r\n            <Form labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={addEmployment}>\r\n                <Form.Item label={\"Job\"} name={'jobOfferId'}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input job name',\r\n                        },\r\n                    ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select job offer by name\"\r\n                        fetchOptions={fetchJobOffersByName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label={\"Resume URL\"} name={'resumeUrl'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input resume url',\r\n                    },\r\n                    { type: 'url', warningOnly: true }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n                    <Button type={'primary'} htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { message, Table, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport axios from \"axios\";\nimport { GET, POST } from \"../../../util/string\";\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\n\nconst DebounceSelect = ({ fetchOptions, firstOptions, debounceTimeout = 50, ...props }) => {\n    const [fetching, setFetching] = useState(false);\n    const [options, setOptions] = useState(firstOptions);\n    const fetchRef = useRef(0);\n    const debounceFetcher = useMemo(() => {\n        const loadOptions = (value) => {\n            fetchRef.current += 1;\n            const fetchId = fetchRef.current;\n            setOptions([]);\n            setFetching(true);\n            fetchOptions(value).then((newOptions) => {\n                if (fetchId !== fetchRef.current) {\n                    // for fetch callback order\n                    return;\n                }\n\n                setOptions(newOptions);\n                setFetching(false);\n            });\n        };\n\n        return debounce(loadOptions, debounceTimeout);\n    }, [fetchOptions, debounceTimeout]);\n    return (\n        <Select\n            showSearch\n            filterOption={false}\n            onSearch={debounceFetcher}\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            {...props}\n            options={options}\n        />\n    );\n}\n\nexport default function EmploymentManagement() {\n\n    const fetchJobOffersByName = (jobName) => {\n        return axios({\n            method: GET,\n            url: `/api/joboffer/queryByName?name=${jobName}`\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: item.title, value: item.id })))\n    };\n\n    const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n    }) => {\n        let inputNode =  <Input />;\n        if (dataIndex === 'jobOfferId') {\n            inputNode = <DebounceSelect\n                placeholder=\"Select job offer by name\"\n                fetchOptions={fetchJobOffersByName}\n                firstOptions={[{label: record.jobTitle, value: record.jobOfferId}]}\n            />;\n        }\n        return (\n            <td {...restProps}>\n                {editing ? (\n                    <Form.Item\n                        name={dataIndex}\n                        style={{\n                            margin: 0,\n                        }}\n                        rules={[\n                            {\n                                required: true,\n                                message: `Please Input ${title}!`,\n                            },\n                        ]}\n                    >\n                        {inputNode}\n                    </Form.Item>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    };\n\n\n    const [form] = Form.useForm();\n\n    const [data, setData] = useState([]),\n        [pagination, setPagination] = useState({\n            current: 1,\n            pageSize: 10,\n        }),\n        [editingKey, setEditingKey] = useState(''),\n        fetch = (pagination) => {\n            return axios({\n                method: GET,\n                url: `/api/employment/page?page=${pagination.current}&size=${pagination.pageSize}`\n            }).then(({ data: { code, message, data } }) => {\n                if (code !== 0) {\n                    message.error({ content: message })\n                } else {\n                    setData(data.list.map(item => {\n                        return { ...item, key: item.id };\n                    }));\n                    setPagination({\n                        current: data.pageNum,\n                        pageSize: data.pageSize,\n                        total: data.total\n                    })\n                }\n            })\n        };\n\n    useEffect(() => {\n        fetch(pagination)\n    }, [])\n\n    const isEditing = (record) => record.key === editingKey;\n\n    const edit = (record) => {\n        form.setFieldsValue({\n            ...record,\n        });\n        setEditingKey(record.key);\n    };\n\n    const save = async (key) => {\n        try {\n            const row = await form.validateFields();\n            const newData = [...data];\n            const index = newData.findIndex((item) => key === item.key);\n\n            if (index > -1) {\n                const item = newData[index];\n                axios({\n                    method: POST,\n                    url: `/api/employment/update/${key}`,\n                    data: row\n                }).then(({ data: { code, message: msg } }) => {\n                    if (code !== 0) {\n                        message.error({ content: msg });\n                    } else {\n                        message.success({ content: \"success\" })\n                        newData.splice(index, 1, { ...item, ...row });\n                        setData(newData);\n                        setEditingKey('');\n                        fetch(pagination);\n                    }\n                })\n            } else {\n                newData.push(row);\n                setData(newData);\n                setEditingKey('');\n            }\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            width: '25%'\n        },\n        {\n            title: 'Job',\n            dataIndex: 'jobOfferId',\n            width: '25%',\n            editable: true,\n            render: (_, record) => {\n                return <div>{record['jobTitle']}</div>\n            }\n        },\n        {\n            title: 'Resume URL',\n            dataIndex: 'resumeUrl',\n            width: '15%',\n            editable: true,\n            render: (_, record) => {\n                return <a onClick={() => window.open(record['resumeUrl'])}>{record['resumeUrl']}</a>\n            }\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: '40%',\n            editable: true,\n        },\n        {\n            title: 'operation',\n            dataIndex: 'operation',\n            render: (_, record) => {\n                const editable = isEditing(record);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(record.key)}\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Save\n                        </Typography.Link>\n                        <Typography.Link\n                            onClick={() =>\n                                axios({\n                                    method: POST, url: `/api/employment/delete/${record.key}`\n                                }).then(({ data: { code, message: msg } }) => {\n                                    if (code !== 0) {\n                                        message.error({ content: msg })\n                                    } else {\n                                        fetch(pagination).then(() => message.success({ content: \"success\" }) && setEditingKey(''))\n                                    }\n                                }).catch(err => message.error({ content: err.toJSON().message }))\n                            }\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Delete\n                        </Typography.Link>\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\n                            <a>Cancel</a>\n                        </Popconfirm>\n                    </span>\n                ) : (\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n                        Edit\n                    </Typography.Link>\n                );\n            },\n        },\n    ];\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (record) => ({\n                record,\n                inputType: 'text',\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(record),\n            }),\n        };\n    });\n\n    return (\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\n            <div className={'bold font-16 m-b-10'}>\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={mergedColumns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            ...pagination,\n                            onChange: page => {\n                                fetch({ ...pagination, current: page }).then(() => setEditingKey(''))\n                            },\n                        }}\n                    />\n                </Form>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { GET } from \"../../../util/string\";\nimport ReactECharts from 'echarts-for-react';\n\n\nexport default function AnalysisManagement() {\n\n    const [option1, setOption1] = useState();\n\n    useEffect(() => {\n        axios({\n            method: GET,\n            url: '/api/employment/countByJobAndStatus'\n        }).then(({ data: { data } }) => {\n            setOption1({\n                tooltip: {\n                    trigger: 'item'\n                },\n                legend: {\n                  left: 'center',\n                  top: 'bottom'\n                },\n                toolbox: {\n                  show: true,\n                  feature: {\n                    mark: { show: true },\n                    dataView: { show: true, readOnly: false },\n                    restore: { show: true },\n                    saveAsImage: { show: true }\n                  }\n                },\n                series: [\n                    {\n                        name: 'Count Of Job Offer On Department',\n                        type: 'pie',\n                        radius: [20, 140],\n                        center: ['75%', '50%'],\n                        roseType: 'area',\n                        itemStyle: {\n                          borderRadius: 5\n                        },\n                        emphasis: {\n                            label: {\n                                show: true\n                            }\n                        },\n                        data: data.job.map(i => ({ value: i.COUNT, name: i.JOB }))\n                    },\n                    {\n                        name: 'Count Of Job Offer On Status',\n                        type: 'pie',\n                        radius: [20, 140],\n                        center: ['25%', '50%'],\n                        roseType: 'radius',\n                        itemStyle: {\n                            borderRadius: 5\n                        },\n                        label: {\n                            show: false\n                        },\n                        emphasis: {\n                            label: {\n                                show: true\n                            }\n                        },\n                        data: data.status.map(i => ({ value: i.COUNT, name: i.STATUS }))\n                    }\n                ]\n            })\n        })\n    }, [])\n\n    return (option1 && <ReactECharts\n        option={option1}\n        style={{ height: 400 }}\n    />) || <></>;\n}\n","import './EmploymentManagement.scss';\r\nimport { Layout, Menu } from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport { Content } from \"antd/es/layout/layout\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport NewEmployment from \"./new/NewEmployment\";\r\nimport ManageEmployment from \"./manage/ManageEmployment\";\r\nimport { useEffect } from \"react\";\r\nimport AnalysisManagement from \"./analysis/AnalysisManagement\";\r\n\r\nexport default function EmploymentManagement(props) {\r\n\r\n    useEffect(() => {\r\n        props.loadUser();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: 400 }}>\r\n            <Sider width={200}\r\n                theme={'light'}\r\n                className={'site-layout-background'}>\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employment/add'}>\r\n                            Add new\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employment/main'}>\r\n                            Manage\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/employment/analysis'}>\r\n                            Analysis\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content className={'site-layout-background'} style={{ padding: '24px' }}>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route path={'/app/employment/'} exact={true}>\r\n                                <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n                                    Please click on the sider to get started.\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={'/app/employment/add'}>\r\n                                <NewEmployment />\r\n                            </Route>\r\n                            <Route path={'/app/employment/main'}>\r\n                                <ManageEmployment />\r\n                            </Route>\r\n                            <Route path={'/app/employment/analysis'}>\r\n                                <AnalysisManagement />\r\n                            </Route>\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import { Button, Form, Input, InputNumber, message, DatePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { GET, POST } from \"../../../util/string\";\r\nimport { useState, useRef, useMemo } from \"react\";\r\nimport { Select, Spin } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst DebounceSelect = ({ fetchOptions, debounceTimeout = 50, ...props }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(value).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n    return (\r\n        <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function NewJoboffer() {\r\n    const fetchDepartmentsByName = (departmentName) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/department/queryByName?name=${departmentName}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: item.name, value: item.id })))\r\n    }, fetchPositionsByName = (name) => {\r\n        return axios({\r\n            method: GET,\r\n            url: `/api/position/queryByName?name=${name}`\r\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: `${item.name}(${item.level})`, value: item.id })))\r\n    };\r\n    function addJoboffer(data) {\r\n        console.log(data);\r\n        axios({\r\n            method: POST,\r\n            url: '/api/joboffer/add',\r\n            data: { ...data, status: 'publish'}\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 0) {\r\n                message.success('Success!');\r\n            } else {\r\n                console.log(response);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n            <div className={'bold font-16 m-b-20'}>Add New Joboffer</div>\r\n            <Form labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={addJoboffer}>\r\n                <Form.Item label={\"Title\"} name={'title'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input title',\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label={\"Number\"} name={'number'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input number',\r\n                    }\r\n                ]}>\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item label={\"Due Date\"} name={'dueDate'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Due Date',\r\n                    }\r\n                ]}>\r\n                    <DatePicker placeholder={'Select'} />\r\n                </Form.Item>\r\n                <Form.Item label={\"Department Name\"} name={'departmentId'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Department Name',\r\n                    }\r\n                ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select employees by email\"\r\n                        fetchOptions={fetchDepartmentsByName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label={\"Position Name\"} name={'positionId'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input Position Name',\r\n                    }\r\n                ]}>\r\n                    <DebounceSelect\r\n                        placeholder=\"Select positions by name\"\r\n                        fetchOptions={fetchPositionsByName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n                    <Button type={'primary'} htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { message, Table, Input, InputNumber, DatePicker, Popconfirm, Form, Typography } from 'antd';\nimport axios from \"axios\";\nimport { GET, POST } from \"../../../util/string\";\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport moment from 'moment';\n\nconst DebounceSelect = ({ fetchOptions, firstOptions, debounceTimeout = 50, ...props }) => {\n    const [fetching, setFetching] = useState(false);\n    const [options, setOptions] = useState(firstOptions);\n    const fetchRef = useRef(0);\n    const debounceFetcher = useMemo(() => {\n        const loadOptions = (value) => {\n            fetchRef.current += 1;\n            const fetchId = fetchRef.current;\n            setOptions([]);\n            setFetching(true);\n            fetchOptions(value).then((newOptions) => {\n                if (fetchId !== fetchRef.current) {\n                    // for fetch callback order\n                    return;\n                }\n\n                setOptions(newOptions);\n                setFetching(false);\n            });\n        };\n\n        return debounce(loadOptions, debounceTimeout);\n    }, [fetchOptions, debounceTimeout]);\n    return (\n        <Select\n            showSearch\n            filterOption={false}\n            onSearch={debounceFetcher}\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            {...props}\n            options={options}\n        />\n    );\n}\n\nexport default function EmploymentJobOffer() {\n\n    const fetchDepartmentsByName = (departmentName) => {\n        return axios({\n            method: GET,\n            url: `/api/department/queryByName?name=${departmentName}`\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: item.name, value: item.id })))\n    }, fetchPositionsByName = (name) => {\n        return axios({\n            method: GET,\n            url: `/api/position/queryByName?name=${name}`\n        }).then(({ data: { code, message, data } }) => data.map(item => ({ label: `${item.name}(${item.level})`, value: item.id })))\n    };\n\n    const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n    }) => {\n        let inputNode;\n        if (dataIndex === 'departmentId') {\n            inputNode = <DebounceSelect\n                placeholder=\"Select department by name\"\n                fetchOptions={fetchDepartmentsByName}\n                firstOptions={[{label: record.departmentName, value: record.departmentId}]}\n            />;\n        } else if (dataIndex === 'positionId') {\n            inputNode = <DebounceSelect\n                placeholder=\"Select position by name\"\n                fetchOptions={fetchPositionsByName}\n                firstOptions={[{label: record.positionName, value: record.positionId}]}\n            />;\n        } else if (dataIndex === 'dueDate') {\n            inputNode = <DatePicker />\n        } else if (dataIndex === 'number') {\n            inputNode = <InputNumber />\n        } else {\n            inputNode = <Input />;\n        }\n        return (\n            <td {...restProps}>\n                {editing ? (\n                    <Form.Item\n                        name={dataIndex}\n                        style={{\n                            margin: 0,\n                        }}\n                        rules={[\n                            {\n                                required: true,\n                                message: `Please Input ${title}!`,\n                            },\n                        ]}\n                    >\n                        {inputNode}\n                    </Form.Item>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    };\n\n\n    const [form] = Form.useForm();\n\n    const [data, setData] = useState([]),\n        [pagination, setPagination] = useState({\n            current: 1,\n            pageSize: 10,\n        }),\n        [editingKey, setEditingKey] = useState(''),\n        fetch = (pagination) => {\n            return axios({\n                method: GET,\n                url: `/api/joboffer/page?page=${pagination.current}&size=${pagination.pageSize}`\n            }).then(({ data: { code, message, data } }) => {\n                if (code !== 0) {\n                    message.error({ content: message })\n                } else {\n                    setData(data.list.map(item => {\n                        return { ...item, key: item.id, dueDate: moment(item.dueDate) };\n                    }));\n                    setPagination({\n                        current: data.pageNum,\n                        pageSize: data.pageSize,\n                        total: data.total\n                    })\n                }\n            })\n        };\n\n    useEffect(() => {\n        fetch(pagination)\n    }, [])\n\n    const isEditing = (record) => record.key === editingKey;\n\n    const edit = (record) => {\n        form.setFieldsValue({\n            ...record,\n        });\n        setEditingKey(record.key);\n    };\n\n    const save = async (key) => {\n        try {\n            const row = await form.validateFields();\n            const newData = [...data];\n            const index = newData.findIndex((item) => key === item.key);\n\n            if (index > -1) {\n                const item = newData[index];\n                axios({\n                    method: POST,\n                    url: `/api/joboffer/update/${key}`,\n                    data: row\n                }).then(({ data: { code, message: msg } }) => {\n                    if (code !== 0) {\n                        message.error({ content: msg });\n                    } else {\n                        message.success({ content: \"success\" })\n                        newData.splice(index, 1, { ...item, ...row });\n                        setData(newData);\n                        setEditingKey('');\n                        fetch(pagination);\n                    }\n                })\n            } else {\n                newData.push(row);\n                setData(newData);\n                setEditingKey('');\n            }\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'Title',\n            dataIndex: 'title',\n            width: '15%',\n            editable: true\n        },\n        {\n            title: 'Number',\n            dataIndex: 'number',\n            width: '10%',\n            editable: true,\n        },\n        {\n            title: 'Due Date',\n            dataIndex: 'dueDate',\n            width: '15%',\n            editable: true,\n            render: (_, record) => {\n                return <>{record.dueDate.format(\"YYYY-MM-DD\")}</>\n            }\n        },\n        {\n            title: 'Department',\n            dataIndex: 'departmentId',\n            width: '15%',\n            editable: true,\n            render: (_, record) => {\n                return <>{record.departmentName}</>\n            }\n        },\n        {\n            title: 'Position',\n            dataIndex: 'positionId',\n            width: '15%',\n            editable: true,\n            render: (_, record) => {\n                return <>{record.positionName}</>\n            }\n        },  \n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: '20%',\n            editable: true,\n        },\n        {\n            title: 'operation',\n            dataIndex: 'operation',\n            render: (_, record) => {\n                const editable = isEditing(record);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(record.key)}\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Save\n                        </Typography.Link>\n                        <Typography.Link\n                            onClick={() =>\n                                axios({\n                                    method: POST, url: `/api/joboffer/delete/${record.key}`\n                                }).then(({ data: { code, message: msg } }) => {\n                                    if (code !== 0) {\n                                        message.error({ content: msg })\n                                    } else {\n                                        fetch(pagination).then(() => message.success({ content: \"success\" }) && setEditingKey(''))\n                                    }\n                                }).catch(err => message.error({ content: err.toJSON().message }))\n                            }\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Delete\n                        </Typography.Link>\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\n                            <a>Cancel</a>\n                        </Popconfirm>\n                    </span>\n                ) : (\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n                        Edit\n                    </Typography.Link>\n                );\n            },\n        },\n    ];\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (record) => ({\n                record,\n                inputType: 'text',\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(record),\n            }),\n        };\n    });\n\n    return (\n        <div style={{ backgroundColor: '#fff', padding: 24 }}>\n            <div className={'bold font-16 m-b-10'}>\n                <Form form={form} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        dataSource={data}\n                        columns={mergedColumns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            ...pagination,\n                            onChange: page => {\n                                fetch({ ...pagination, current: page }).then(() => setEditingKey(''))\n                            },\n                        }}\n                    />\n                </Form>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { GET } from \"../../../util/string\";\nimport ReactECharts from 'echarts-for-react';\n\n\nexport default function AnalysisJobOffer() {\n\n    const [option1, setOption1] = useState();\n\n    useEffect(() => {\n        axios({\n            method: GET,\n            url: '/api/joboffer/countByDepartmentAndStatus'\n        }).then(({ data: { data } }) => {\n            setOption1({\n                tooltip: {\n                    trigger: 'item'\n                },\n                legend: {\n                  left: 'center',\n                  top: 'bottom'\n                },\n                toolbox: {\n                  show: true,\n                  feature: {\n                    mark: { show: true },\n                    dataView: { show: true, readOnly: false },\n                    restore: { show: true },\n                    saveAsImage: { show: true }\n                  }\n                },\n                series: [\n                    {\n                        name: 'Count Of Job Offer On Department',\n                        type: 'pie',\n                        radius: [20, 140],\n                        center: ['75%', '50%'],\n                        roseType: 'area',\n                        itemStyle: {\n                          borderRadius: 5\n                        },\n                        emphasis: {\n                            label: {\n                                show: true\n                            }\n                        },\n                        data: data.department.map(i => ({ value: i.COUNT, name: i.NAME }))\n                    },\n                    {\n                        name: 'Count Of Job Offer On Status',\n                        type: 'pie',\n                        radius: [20, 140],\n                        center: ['25%', '50%'],\n                        roseType: 'radius',\n                        itemStyle: {\n                            borderRadius: 5\n                        },\n                        label: {\n                            show: false\n                        },\n                        emphasis: {\n                            label: {\n                                show: true\n                            }\n                        },\n                        data: data.status.map(i => ({ value: i.COUNT, name: i.STATUS }))\n                    }\n                ]\n            })\n        })\n    }, [])\n\n    return (option1 && <ReactECharts\n        option={option1}\n        style={{ height: 400 }}\n    />) || <></>;\n}\n","import './JobOfferManagement.scss';\r\nimport { Layout, Menu } from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport { Content } from \"antd/es/layout/layout\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport NewJobOffer from \"./new/NewJobOffer\";\r\nimport ManageJobOffer from \"./manage/ManageJobOffer\";\r\nimport { useEffect } from \"react\";\r\nimport AnalysisJobOffer from \"./analysis/AnalysisJobOffer\";\r\n\r\n\r\nexport default function JobOfferManagement(props) {\r\n\r\n    useEffect(() => {\r\n        props.loadUser();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: 400 }}>\r\n            <Sider width={200}\r\n                theme={'light'}\r\n                className={'site-layout-background'}>\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/joboffer/add'}>\r\n                            Add new\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/joboffer/main'}>\r\n                            Manage\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Link to={'/app/joboffer/analysis'}>\r\n                            Analysis\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content className={'site-layout-background'} style={{ padding: '24px' }}>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route path={'/app/joboffer/'} exact={true}>\r\n                                <div style={{ backgroundColor: '#fff', padding: 24 }}>\r\n                                    Please click on the sider to get started.\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={'/app/joboffer/add'}>\r\n                                <NewJobOffer />\r\n                            </Route>\r\n                            <Route path={'/app/joboffer/main'}>\r\n                                <ManageJobOffer />\r\n                            </Route>\r\n                            <Route path={'/app/joboffer/analysis'}>\r\n                                <AnalysisJobOffer />\r\n                            </Route>\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import './Home.scss';\r\nimport {Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { SmileTwoTone, BuildTwoTone, DollarTwoTone, CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\nconst ICON_STYLE = {fontSize: 48};\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className={'home'}>\r\n            <div className={'section'}>\r\n                <div className={'bold font-24 m-b-10'}>Hi, there!</div>\r\n                <span>Welcome to HR system. You could manage everything in one site!</span>\r\n                <div className={'icons'}>\r\n                    <SmileTwoTone style={ICON_STYLE}/>\r\n                    <BuildTwoTone twoToneColor=\"#eb2f96\" style={ICON_STYLE}/>\r\n                    <DollarTwoTone twoToneColor=\"rgb(228, 178, 50)\" style={ICON_STYLE}/>\r\n                    <CheckCircleTwoTone twoToneColor=\"#52c41a\" style={ICON_STYLE}/>\r\n                </div>\r\n                <div>\r\n                    <Button type={'primary'}>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                    <Button type={'link'}>\r\n                        <Link to={'/sign-up'}>Sign up</Link>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'section'}>\r\n                <div className={'bold font-24 m-b-10'}>Employee Management</div>\r\n                <span>\r\n                    HR System makes employee management easy.\r\n                </span>\r\n            </div>\r\n\r\n            <div className={'section'}>\r\n                <div className={'bold font-24 m-b-10'}>Attendance Management</div>\r\n                <span>\r\n                    HR System makes attendance management easy.\r\n                </span>\r\n            </div>\r\n\r\n            <div className={'section'}>\r\n                <div className={'bold font-24 m-b-10'}>Salary Management</div>\r\n                <span>\r\n                    HR System makes salary management easy.\r\n                </span>\r\n            </div>\r\n\r\n            <div className={'section'}>\r\n                <div className={'bold font-24 m-b-10'}>Employment Management</div>\r\n                <span>\r\n                    HR System makes employment management easy.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default function Profile() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n}","import './App.scss';\r\nimport './css/font.scss';\r\nimport './css/margin.scss';\r\nimport './css/display.scss';\r\nimport 'antd/dist/antd.css';\r\nimport { HashRouter as Router, Link } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Login from \"./pages/login/Login\";\r\nimport SignUp from \"./pages/signUp/SignUp\";\r\nimport EmployeeManagement from \"./pages/employeeManagement/EmployeeManagement\";\r\nimport Layout, { Header, Footer, Content } from \"antd/es/layout/layout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown, Menu, Divider, Avatar } from \"antd\";\r\nimport { RedEnvelopeOutlined, SmileTwoTone, TableOutlined, TeamOutlined, UsergroupAddOutlined, CodepenOutlined } from \"@ant-design/icons\";\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport AttendanceManagement from \"./pages/attendanceManagement/AttendanceManagement\";\r\nimport SalaryManagement from \"./pages/salaryManagement/SalaryManagement\";\r\nimport EmploymentManagement from \"./pages/employmentManagement/EmploymentManagement\";\r\nimport JobOfferManagement from \"./pages/jobOfferManagement/JobOfferManagement\";\r\nimport Home from \"./pages/home/Home\";\r\nimport axios from \"axios\";\r\nimport { GET } from \"./util/string\";\r\nimport Profile from \"./pages/profile/Profile\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [user, setUser] = useState(null);  // set to null when in production\r\n\r\n    const APP_HOME_STYLE = {\r\n        width: '100%',\r\n        backgroundColor: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 24,\r\n        height: 400\r\n    }\r\n\r\n    function loadUser() {\r\n        axios({\r\n            method: GET,\r\n            url: '/api/account/me'\r\n        }).then(({ data: { code, message, data } }) => {\r\n            if (code === 0) {\r\n                setUser(data);\r\n            } else {\r\n                window.location.hash = '/login'\r\n            }\r\n        }).catch(e => {\r\n            window.location.hash = '/login';\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        axios({\r\n            method: GET,\r\n            url: '/api/account/logout'\r\n        }).then(() => {\r\n            setUser(null);\r\n            window.location.hash = '/login';\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Welcome to HR system';\r\n        axios({\r\n            method: GET,\r\n            url: '/api/account/me'\r\n        }).then(({ data: { code, message, data } }) => {\r\n            if (code === 0) {\r\n                setUser(data);\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <span className={'red-text'} onClick={logout}>Log out</span>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Route path={\"/\"} exact={true}>\r\n                    <Home />\r\n                </Route>\r\n\r\n                <Route path={'/login'} exact={true}>\r\n                    <Login loadUser={loadUser} />\r\n                </Route>\r\n\r\n                <Route path={'/sign-up'}>\r\n                    <SignUp />\r\n                </Route>\r\n\r\n                <Route path={'/app'}>\r\n                    <Layout>\r\n                        <Header>\r\n                            <Menu theme={'dark'}\r\n                                style={{ width: 800 }}\r\n                                mode={'horizontal'}>\r\n                                <Menu.Item key=\"1\" icon={<TeamOutlined />}>\r\n                                    <Link to={'/app/employee/'}>\r\n                                        Employees\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"2\" icon={<TableOutlined />}>\r\n                                    <Link to={'/app/attendance/'}>\r\n                                        Attendance\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"3\" icon={<RedEnvelopeOutlined />}>\r\n                                    <Link to={'/app/salary/'}>\r\n                                        Salary\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"4\" icon={<CodepenOutlined />}>\r\n                                    <Link to={'/app/jobOffer/'}>\r\n                                        Job Offer\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"5\" icon={<UsergroupAddOutlined />}>\r\n                                    <Link to={'/app/employment/'}>\r\n                                        Employment\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n\r\n                            {user !== null &&\r\n                                <Dropdown overlay={menu} trigger={['click']}>\r\n                                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        <Avatar size={30}>{user.name[0]}</Avatar>&nbsp; {user.name} <DownOutlined />\r\n                                    </a>\r\n                                </Dropdown>}\r\n                        </Header>\r\n\r\n                        <Divider />\r\n                        <Content style={{ padding: '0 50px', minHeight: 'calc(100vh - 120px)' }}>\r\n                            <Layout style={{ minHeight: 'calc(100vh - 200px)' }}>\r\n                                <Switch>\r\n                                    <Route exact={true} path={'/app/'}>\r\n                                        <div style={APP_HOME_STYLE}>\r\n                                            <SmileTwoTone style={{ fontSize: 48 }} twoToneColor=\"rgb(228, 200, 100)\" />\r\n                                            <div className={'bold font-24'}>\r\n                                                Welcome!\r\n                                            </div>\r\n                                            <span>\r\n                                                Click on the navigation bar to get started.\r\n                                            </span>\r\n                                        </div>\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/employee/*'}>\r\n                                        <EmployeeManagement loadUser={loadUser} />\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/attendance/*'}>\r\n                                        <AttendanceManagement loadUser={loadUser}/>\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/salary/*'}>\r\n                                        <SalaryManagement loadUser={loadUser} />\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/joboffer/*'}>\r\n                                        <JobOfferManagement loadUser={loadUser} />\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/employment/*'}>\r\n                                        <EmploymentManagement loadUser={loadUser} />\r\n                                    </Route>\r\n                                    <Route exact={true} path={'/app/profile/*'}>\r\n                                        <Profile />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </Layout>\r\n                            <Footer style={{ textAlign: 'center' }}>CityU 5003 Project ©2021</Footer>\r\n                        </Content>\r\n                    </Layout>\r\n\r\n\r\n                </Route>\r\n            </Router>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}